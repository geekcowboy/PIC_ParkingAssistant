

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb  6 23:14:56 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _ADCON1	set	4033
    19  0000                     _CMCON	set	4020
    20  0000                     _INTCON2	set	4081
    21  0000                     _LATA	set	3977
    22  0000                     _LATB	set	3978
    23  0000                     _LATBbits	set	3978
    24  0000                     _OSCCON	set	4051
    25  0000                     _PORTBbits	set	3969
    26  0000                     _T0CON	set	4053
    27  0000                     _T0CONbits	set	4053
    28  0000                     _TMR0H	set	4055
    29  0000                     _TMR0L	set	4054
    30  0000                     _TRISA	set	3986
    31  0000                     _TRISB	set	3987
    32  0000                     _TRISBbits	set	3987
    33                           
    34                           ; #config settings
    35  0000                     
    36                           	psect	cinit
    37  007C04                     __pcinit:
    38                           	opt stack 0
    39  007C04                     start_initialization:
    40                           	opt stack 0
    41  007C04                     __initialization:
    42                           	opt stack 0
    43  007C04                     end_of_initialization:
    44                           	opt stack 0
    45  007C04                     __end_of__initialization:
    46                           	opt stack 0
    47  007C04  0E00               	movlw	low (__Lmediumconst shr (0+16))
    48  007C06  6EF8               	movwf	tblptru,c
    49  007C08  0100               	movlb	0
    50  007C0A  EFAB  F03E         	goto	_main	;jump to C main() function
    51                           tblptru	equ	0xFF8
    52                           
    53                           	psect	cstackCOMRAM
    54  000001                     __pcstackCOMRAM:
    55                           	opt stack 0
    56  000001                     ?___lwdiv:
    57                           	opt stack 0
    58  000001                     ?___lmul:
    59                           	opt stack 0
    60  000001                     ?___lldiv:
    61                           	opt stack 0
    62  000001                     delay_timer@i:
    63                           	opt stack 0
    64  000001                     ___lwdiv@dividend:
    65                           	opt stack 0
    66  000001                     ___lmul@multiplier:
    67                           	opt stack 0
    68  000001                     ___lldiv@dividend:
    69                           	opt stack 0
    70                           
    71                           ; 4 bytes @ 0x0
    72  000001                     	ds	2
    73  000003                     ___lwdiv@divisor:
    74                           	opt stack 0
    75                           
    76                           ; 2 bytes @ 0x2
    77  000003                     	ds	2
    78  000005                     ___lwdiv@quotient:
    79                           	opt stack 0
    80  000005                     ___lmul@multiplicand:
    81                           	opt stack 0
    82  000005                     ___lldiv@divisor:
    83                           	opt stack 0
    84                           
    85                           ; 4 bytes @ 0x4
    86  000005                     	ds	2
    87  000007                     ___lwdiv@counter:
    88                           	opt stack 0
    89                           
    90                           ; 1 bytes @ 0x6
    91  000007                     	ds	2
    92  000009                     ___lmul@product:
    93                           	opt stack 0
    94  000009                     ___lldiv@quotient:
    95                           	opt stack 0
    96                           
    97                           ; 4 bytes @ 0x8
    98  000009                     	ds	4
    99  00000D                     ___lldiv@counter:
   100                           	opt stack 0
   101                           
   102                           ; 1 bytes @ 0xC
   103  00000D                     	ds	1
   104  00000E                     ?_checkDistance:
   105                           	opt stack 0
   106                           
   107                           ; 2 bytes @ 0xD
   108  00000E                     	ds	2
   109  000010                     ??_checkDistance:
   110                           
   111                           ; 1 bytes @ 0xF
   112  000010                     	ds	4
   113  000014                     checkDistance@distance:
   114                           	opt stack 0
   115                           
   116                           ; 20 bytes @ 0x13
   117  000014                     	ds	20
   118  000028                     checkDistance@Tl:
   119                           	opt stack 0
   120                           
   121                           ; 1 bytes @ 0x27
   122  000028                     	ds	1
   123  000029                     checkDistance@Th:
   124                           	opt stack 0
   125                           
   126                           ; 1 bytes @ 0x28
   127  000029                     	ds	1
   128  00002A                     checkDistance@avgDistance:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x29
   132  00002A                     	ds	2
   133  00002C                     checkDistance@ctr:
   134                           	opt stack 0
   135                           
   136                           ; 2 bytes @ 0x2B
   137  00002C                     	ds	2
   138  00002E                     checkDistance@ctr2:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x2D
   142  00002E                     	ds	2
   143  000030                     checkDistance@Tm:
   144                           	opt stack 0
   145                           
   146                           ; 4 bytes @ 0x2F
   147  000030                     	ds	4
   148  000034                     ??_main:
   149                           
   150                           ; 1 bytes @ 0x33
   151  000034                     	ds	2
   152  000036                     main@state_CURRENT:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x35
   156  000036                     	ds	2
   157  000038                     main@distance:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0x37
   161  000038                     	ds	2
   162                           tblptru	equ	0xFF8
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 48 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  distance        2   55[COMRAM] unsigned int 
   174 ;;  state_CURREN    2   53[COMRAM] unsigned int 
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   184 ;;      Params:         0       0       0       0       0       0       0
   185 ;;      Locals:         4       0       0       0       0       0       0
   186 ;;      Temps:          2       0       0       0       0       0       0
   187 ;;      Totals:         6       0       0       0       0       0       0
   188 ;;Total ram usage:        6 bytes
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		_checkDistance
   192 ;;		_setGreenLight
   193 ;;		_setRedLight
   194 ;;		_setYellowLight
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  007D56                     __ptext0:
   202                           	opt stack 0
   203  007D56                     _main:
   204                           	opt stack 29
   205                           
   206                           ;main.c: 50: unsigned int state_CURRENT = 0;
   207                           
   208                           ;incstack = 0
   209  007D56  0E00               	movlw	0
   210  007D58  6E37               	movwf	main@state_CURRENT+1,c
   211  007D5A  0E00               	movlw	0
   212  007D5C  6E36               	movwf	main@state_CURRENT,c
   213                           
   214                           ;main.c: 51: unsigned int distance = 0;
   215  007D5E  0E00               	movlw	0
   216  007D60  6E39               	movwf	main@distance+1,c
   217  007D62  0E00               	movlw	0
   218  007D64  6E38               	movwf	main@distance,c
   219                           
   220                           ;main.c: 53: ADCON1 = 0x0F;
   221  007D66  0E0F               	movlw	15
   222  007D68  6EC1               	movwf	4033,c	;volatile
   223                           
   224                           ;main.c: 54: T0CON = 0x00;
   225  007D6A  0E00               	movlw	0
   226  007D6C  6ED5               	movwf	4053,c	;volatile
   227                           
   228                           ;main.c: 55: OSCCON = 0x72;
   229  007D6E  0E72               	movlw	114
   230  007D70  6ED3               	movwf	4051,c	;volatile
   231                           
   232                           ;main.c: 56: CMCON = 0x07;
   233  007D72  0E07               	movlw	7
   234  007D74  6EB4               	movwf	4020,c	;volatile
   235                           
   236                           ;main.c: 57: INTCON2 = 0x80;
   237  007D76  0E80               	movlw	128
   238  007D78  6EF1               	movwf	intcon2,c	;volatile
   239                           
   240                           ;main.c: 59: TRISB = 0;
   241  007D7A  0E00               	movlw	0
   242  007D7C  6E93               	movwf	3987,c	;volatile
   243                           
   244                           ;main.c: 60: TRISA = 0;
   245  007D7E  0E00               	movlw	0
   246  007D80  6E92               	movwf	3986,c	;volatile
   247                           
   248                           ;main.c: 61: LATB = 0;
   249  007D82  0E00               	movlw	0
   250  007D84  6E8A               	movwf	3978,c	;volatile
   251                           
   252                           ;main.c: 62: LATA = 0;
   253  007D86  0E00               	movlw	0
   254  007D88  6E89               	movwf	3977,c	;volatile
   255                           
   256                           ;main.c: 64: TRISBbits.TRISB1 = 0;
   257  007D8A  9293               	bcf	3987,1,c	;volatile
   258                           
   259                           ;main.c: 65: TRISBbits.TRISB2 = 0;
   260  007D8C  9493               	bcf	3987,2,c	;volatile
   261                           
   262                           ;main.c: 66: TRISBbits.TRISB3 = 0;
   263  007D8E  9693               	bcf	3987,3,c	;volatile
   264                           
   265                           ;main.c: 68: distance = checkDistance();
   266  007D90  EC2E  F03F         	call	_checkDistance	;wreg free
   267  007D94  C00E  F038         	movff	?_checkDistance,main@distance
   268  007D98  C00F  F039         	movff	?_checkDistance+1,main@distance+1
   269                           
   270                           ;main.c: 70: if (distance < 180) {
   271  007D9C  5039               	movf	main@distance+1,w,c
   272  007D9E  E10A               	bnz	l1036
   273  007DA0  0EB4               	movlw	180
   274  007DA2  5C38               	subwf	main@distance,w,c
   275  007DA4  B0D8               	btfsc	status,0,c
   276  007DA6  D006               	goto	l1036
   277                           
   278                           ;main.c: 71: setRedLight();
   279  007DA8  ECFA  F03D         	call	_setRedLight	;wreg free
   280  007DAC                     l1034:
   281                           
   282                           ;main.c: 72: state_CURRENT = 0;
   283  007DAC  0E00               	movlw	0
   284  007DAE  6E37               	movwf	main@state_CURRENT+1,c
   285  007DB0  0E00               	movlw	0
   286  007DB2  D00C               	goto	L2
   287  007DB4                     l1036:
   288                           
   289                           ;main.c: 74: else if (distance > 285) {
   290  007DB4  0E1E               	movlw	30
   291  007DB6  5C38               	subwf	main@distance,w,c
   292  007DB8  0E01               	movlw	1
   293  007DBA  5839               	subwfb	main@distance+1,w,c
   294  007DBC  A0D8               	btfss	status,0,c
   295  007DBE  D003               	goto	l1042
   296                           
   297                           ;main.c: 75: setGreenLight();
   298  007DC0  ECF6  F03D         	call	_setGreenLight	;wreg free
   299  007DC4  D025               	goto	l1064
   300  007DC6                     l1042:
   301                           
   302                           ;main.c: 78: else {
   303                           ;main.c: 79: setYellowLight();
   304  007DC6  ECFE  F03D         	call	_setYellowLight	;wreg free
   305  007DCA  D02E               	goto	l1070
   306  007DCC                     L2:
   307  007DCC  6E36               	movwf	main@state_CURRENT,c
   308  007DCE                     l1046:
   309                           
   310                           ;main.c: 84: distance = checkDistance();
   311  007DCE  EC2E  F03F         	call	_checkDistance	;wreg free
   312  007DD2  C00E  F038         	movff	?_checkDistance,main@distance
   313  007DD6  C00F  F039         	movff	?_checkDistance+1,main@distance+1
   314                           
   315                           ;main.c: 86: switch(state_CURRENT) {
   316  007DDA  D02D               	goto	l1078
   317  007DDC                     l1048:
   318                           
   319                           ;main.c: 88: if (distance > 180) {
   320  007DDC  5039               	movf	main@distance+1,w,c
   321  007DDE  E104               	bnz	u390
   322  007DE0  0EB5               	movlw	181
   323  007DE2  5C38               	subwf	main@distance,w,c
   324  007DE4  A0D8               	btfss	status,0,c
   325  007DE6  D7F3               	goto	l1046
   326  007DE8                     u390:
   327                           
   328                           ;main.c: 89: setYellowLight();
   329  007DE8  ECFE  F03D         	call	_setYellowLight	;wreg free
   330  007DEC  D01D               	goto	l1070
   331  007DEE                     l1054:
   332                           
   333                           ;main.c: 94: if (distance <= 100) {
   334  007DEE  5039               	movf	main@distance+1,w,c
   335  007DF0  E107               	bnz	l1060
   336  007DF2  0E65               	movlw	101
   337  007DF4  5C38               	subwf	main@distance,w,c
   338  007DF6  B0D8               	btfsc	status,0,c
   339  007DF8  D003               	goto	l1060
   340                           
   341                           ;main.c: 95: setRedLight();
   342  007DFA  ECFA  F03D         	call	_setRedLight	;wreg free
   343  007DFE  D7D6               	goto	l1034
   344  007E00                     l1060:
   345                           
   346                           ;main.c: 98: else if (distance > 285) {
   347  007E00  0E1E               	movlw	30
   348  007E02  5C38               	subwf	main@distance,w,c
   349  007E04  0E01               	movlw	1
   350  007E06  5839               	subwfb	main@distance+1,w,c
   351  007E08  A0D8               	btfss	status,0,c
   352  007E0A  D7E1               	goto	l1046
   353                           
   354                           ;main.c: 99: setGreenLight();
   355  007E0C  ECF6  F03D         	call	_setGreenLight	;wreg free
   356  007E10                     l1064:
   357                           
   358                           ;main.c: 100: state_CURRENT = 2;
   359  007E10  0E00               	movlw	0
   360  007E12  6E37               	movwf	main@state_CURRENT+1,c
   361  007E14  0E02               	movlw	2
   362  007E16  D7DA               	goto	L2
   363  007E18                     l1066:
   364                           
   365                           ;main.c: 104: if (distance <= 205) {
   366  007E18  5039               	movf	main@distance+1,w,c
   367  007E1A  E1D9               	bnz	l1046
   368  007E1C  0ECE               	movlw	206
   369  007E1E  5C38               	subwf	main@distance,w,c
   370  007E20  B0D8               	btfsc	status,0,c
   371  007E22  D7D5               	goto	l1046
   372                           
   373                           ;main.c: 105: setYellowLight();
   374  007E24  ECFE  F03D         	call	_setYellowLight	;wreg free
   375  007E28                     l1070:
   376                           
   377                           ;main.c: 106: state_CURRENT = 1;
   378  007E28  0E00               	movlw	0
   379  007E2A  6E37               	movwf	main@state_CURRENT+1,c
   380  007E2C  0E01               	movlw	1
   381  007E2E  D7CE               	goto	L2
   382  007E30                     l1072:
   383                           
   384                           ;main.c: 110: setRedLight();
   385  007E30  ECFA  F03D         	call	_setRedLight	;wreg free
   386  007E34  D7BB               	goto	l1034
   387  007E36                     l1078:
   388  007E36  C036  F034         	movff	main@state_CURRENT,??_main
   389  007E3A  C037  F035         	movff	main@state_CURRENT+1,??_main+1
   390                           
   391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   392                           ; Switch size 1, requested type "space"
   393                           ; Number of cases is 1, Range of values is 0 to 0
   394                           ; switch strategies available:
   395                           ; Name         Instructions Cycles
   396                           ; simple_byte            4     3 (average)
   397                           ;	Chosen strategy is simple_byte
   398  007E3E  5035               	movf	??_main+1,w,c
   399  007E40  0A00               	xorlw	0	; case 0
   400  007E42  A4D8               	btfss	status,2,c
   401  007E44  D7F5               	goto	l1072
   402                           
   403                           ; Switch size 1, requested type "space"
   404                           ; Number of cases is 3, Range of values is 0 to 2
   405                           ; switch strategies available:
   406                           ; Name         Instructions Cycles
   407                           ; simple_byte           10     6 (average)
   408                           ;	Chosen strategy is simple_byte
   409  007E46  5034               	movf	??_main,w,c
   410  007E48  0A00               	xorlw	0	; case 0
   411  007E4A  B4D8               	btfsc	status,2,c
   412  007E4C  D7C7               	goto	l1048
   413  007E4E  0A01               	xorlw	1	; case 1
   414  007E50  B4D8               	btfsc	status,2,c
   415  007E52  D7CD               	goto	l1054
   416  007E54  0A03               	xorlw	3	; case 2
   417  007E56  B4D8               	btfsc	status,2,c
   418  007E58  D7DF               	goto	l1066
   419  007E5A  D7EA               	goto	l1072
   420  007E5C                     __end_of_main:
   421                           	opt stack 0
   422                           tblptru	equ	0xFF8
   423                           intcon2	equ	0xFF1
   424                           status	equ	0xFD8
   425                           
   426 ;; *************** function _setYellowLight *****************
   427 ;; Defined at:
   428 ;;		line 184 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		None
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text1
   456  007BFC                     __ptext1:
   457                           	opt stack 0
   458  007BFC                     _setYellowLight:
   459                           	opt stack 30
   460                           
   461                           ;main.c: 185: LATBbits.LATB1 = 0;
   462                           
   463                           ;incstack = 0
   464  007BFC  928A               	bcf	3978,1,c	;volatile
   465                           
   466                           ;main.c: 186: LATBbits.LATB2 = 1;
   467  007BFE  848A               	bsf	3978,2,c	;volatile
   468                           
   469                           ;main.c: 187: LATBbits.LATB3 = 0;
   470  007C00  968A               	bcf	3978,3,c	;volatile
   471  007C02  0012               	return		;funcret
   472  007C04                     __end_of_setYellowLight:
   473                           	opt stack 0
   474                           tblptru	equ	0xFF8
   475                           intcon2	equ	0xFF1
   476                           status	equ	0xFD8
   477                           
   478 ;; *************** function _setRedLight *****************
   479 ;; Defined at:
   480 ;;		line 190 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		None
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   494 ;;      Params:         0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508  007BF4                     __ptext2:
   509                           	opt stack 0
   510  007BF4                     _setRedLight:
   511                           	opt stack 30
   512                           
   513                           ;main.c: 191: LATBbits.LATB1 = 0;
   514                           
   515                           ;incstack = 0
   516  007BF4  928A               	bcf	3978,1,c	;volatile
   517                           
   518                           ;main.c: 192: LATBbits.LATB2 = 0;
   519  007BF6  948A               	bcf	3978,2,c	;volatile
   520                           
   521                           ;main.c: 193: LATBbits.LATB3 = 1;
   522  007BF8  868A               	bsf	3978,3,c	;volatile
   523  007BFA  0012               	return		;funcret
   524  007BFC                     __end_of_setRedLight:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           intcon2	equ	0xFF1
   528                           status	equ	0xFD8
   529                           
   530 ;; *************** function _setGreenLight *****************
   531 ;; Defined at:
   532 ;;		line 177 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		None
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   546 ;;      Params:         0       0       0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text3
   560  007BEC                     __ptext3:
   561                           	opt stack 0
   562  007BEC                     _setGreenLight:
   563                           	opt stack 30
   564                           
   565                           ;main.c: 178: LATBbits.LATB1 = 1;
   566                           
   567                           ;incstack = 0
   568  007BEC  828A               	bsf	3978,1,c	;volatile
   569                           
   570                           ;main.c: 179: LATBbits.LATB2 = 0;
   571  007BEE  948A               	bcf	3978,2,c	;volatile
   572                           
   573                           ;main.c: 180: LATBbits.LATB3 = 0;
   574  007BF0  968A               	bcf	3978,3,c	;volatile
   575  007BF2  0012               	return		;funcret
   576  007BF4                     __end_of_setGreenLight:
   577                           	opt stack 0
   578                           tblptru	equ	0xFF8
   579                           intcon2	equ	0xFF1
   580                           status	equ	0xFD8
   581                           
   582 ;; *************** function _checkDistance *****************
   583 ;; Defined at:
   584 ;;		line 125 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  ctr2            2   45[COMRAM] int 
   589 ;;  ctr             2   43[COMRAM] int 
   590 ;;  distance       20   19[COMRAM] unsigned int [10]
   591 ;;  Tm              4   47[COMRAM] unsigned long 
   592 ;;  avgDistance     2   41[COMRAM] unsigned int 
   593 ;;  Th              1   40[COMRAM] unsigned char 
   594 ;;  Tl              1   39[COMRAM] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2   13[COMRAM] int 
   597 ;; Registers used:
   598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   604 ;;      Params:         2       0       0       0       0       0       0
   605 ;;      Locals:        32       0       0       0       0       0       0
   606 ;;      Temps:          4       0       0       0       0       0       0
   607 ;;      Totals:        38       0       0       0       0       0       0
   608 ;;Total ram usage:       38 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    1
   611 ;; This function calls:
   612 ;;		___lldiv
   613 ;;		___lmul
   614 ;;		___lwdiv
   615 ;;		_delay_timer
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text4
   622  007E5C                     __ptext4:
   623                           	opt stack 0
   624  007E5C                     _checkDistance:
   625                           	opt stack 29
   626                           
   627                           ;main.c: 126: unsigned long Tm;
   628                           ;main.c: 127: unsigned char Tl, Th;
   629                           ;main.c: 128: unsigned int distance[10];
   630                           ;main.c: 129: unsigned int avgDistance = 0;
   631                           
   632                           ;incstack = 0
   633  007E5C  0E00               	movlw	0
   634  007E5E  6E2B               	movwf	checkDistance@avgDistance+1,c
   635  007E60  0E00               	movlw	0
   636  007E62  6E2A               	movwf	checkDistance@avgDistance,c
   637                           
   638                           ;main.c: 131: for (int ctr = 0; ctr < 10; ctr++) {
   639  007E64  0E00               	movlw	0
   640  007E66  6E2D               	movwf	checkDistance@ctr+1,c
   641  007E68  0E00               	movlw	0
   642  007E6A  6E2C               	movwf	checkDistance@ctr,c
   643  007E6C  BE2D               	btfsc	checkDistance@ctr+1,7,c
   644  007E6E  D008               	goto	l962
   645  007E70  502D               	movf	checkDistance@ctr+1,w,c
   646  007E72  E105               	bnz	u310
   647  007E74  0E0A               	movlw	10
   648  007E76  5C2C               	subwf	checkDistance@ctr,w,c
   649  007E78  B0D8               	btfsc	status,0,c
   650  007E7A  D093               	goto	l1002
   651  007E7C  D001               	goto	l962
   652  007E7E                     u310:
   653  007E7E  D091               	goto	l1002
   654  007E80                     l962:
   655                           
   656                           ;main.c: 133: TMR0H = 0;
   657  007E80  0E00               	movlw	0
   658  007E82  6ED7               	movwf	4055,c	;volatile
   659                           
   660                           ;main.c: 134: TMR0L = 0;
   661  007E84  0E00               	movlw	0
   662  007E86  6ED6               	movwf	4054,c	;volatile
   663                           
   664                           ;main.c: 136: TRISBbits.TRISB0 = 0;
   665  007E88  9093               	bcf	3987,0,c	;volatile
   666                           
   667                           ;main.c: 138: LATBbits.LATB0 = 0;
   668  007E8A  908A               	bcf	3978,0,c	;volatile
   669                           
   670                           ;main.c: 139: delay_timer();
   671  007E8C  EC07  F03E         	call	_delay_timer	;wreg free
   672                           
   673                           ;main.c: 141: LATBbits.LATB0 = 1;
   674  007E90  808A               	bsf	3978,0,c	;volatile
   675                           
   676                           ;main.c: 142: delay_timer();
   677  007E92  EC07  F03E         	call	_delay_timer	;wreg free
   678                           
   679                           ;main.c: 144: LATBbits.LATB0 = 0;
   680  007E96  908A               	bcf	3978,0,c	;volatile
   681                           
   682                           ;main.c: 146: TRISBbits.TRISB0 = 1;
   683  007E98  8093               	bsf	3987,0,c	;volatile
   684  007E9A                     l69:
   685  007E9A  A081               	btfss	3969,0,c	;volatile
   686  007E9C  D7FE               	goto	l69
   687                           
   688                           ;main.c: 148: T0CONbits.TMR0ON = 1;
   689  007E9E  8ED5               	bsf	4053,7,c	;volatile
   690  007EA0                     l72:
   691  007EA0  B081               	btfsc	3969,0,c	;volatile
   692  007EA2  D7FE               	goto	l72
   693                           
   694                           ;main.c: 150: T0CONbits.TMR0ON = 0;
   695  007EA4  9ED5               	bcf	4053,7,c	;volatile
   696                           
   697                           ;main.c: 152: Tl = TMR0L;
   698  007EA6  CFD6 F028          	movff	4054,checkDistance@Tl	;volatile
   699                           
   700                           ;main.c: 153: Th = TMR0H;
   701  007EAA  CFD7 F029          	movff	4055,checkDistance@Th	;volatile
   702                           
   703                           ;main.c: 154: Tm = Th * 256 + Tl;
   704  007EAE  5028               	movf	checkDistance@Tl,w,c
   705  007EB0  C029  F010         	movff	checkDistance@Th,??_checkDistance
   706  007EB4  6A11               	clrf	(??_checkDistance+1)& (0+255),c
   707  007EB6  C010  F011         	movff	??_checkDistance,??_checkDistance+1
   708  007EBA  6A10               	clrf	??_checkDistance,c
   709  007EBC  2610               	addwf	??_checkDistance,f,c
   710  007EBE  0E00               	movlw	0
   711  007EC0  2211               	addwfc	??_checkDistance+1,f,c
   712  007EC2  C010  F030         	movff	??_checkDistance,checkDistance@Tm
   713  007EC6  C011  F031         	movff	??_checkDistance+1,checkDistance@Tm+1
   714  007ECA  0E00               	movlw	0
   715  007ECC  BE31               	btfsc	checkDistance@Tm+1,7,c
   716  007ECE  0EFF               	movlw	-1
   717  007ED0  6E32               	movwf	checkDistance@Tm+2,c
   718  007ED2  6E33               	movwf	checkDistance@Tm+3,c
   719                           
   720                           ;main.c: 155: Tm = Tm/2;
   721  007ED4  C030  F010         	movff	checkDistance@Tm,??_checkDistance
   722  007ED8  C031  F011         	movff	checkDistance@Tm+1,??_checkDistance+1
   723  007EDC  C032  F012         	movff	checkDistance@Tm+2,??_checkDistance+2
   724  007EE0  C033  F013         	movff	checkDistance@Tm+3,??_checkDistance+3
   725  007EE4  90D8               	bcf	status,0,c
   726  007EE6  3213               	rrcf	??_checkDistance+3,f,c
   727  007EE8  3212               	rrcf	??_checkDistance+2,f,c
   728  007EEA  3211               	rrcf	??_checkDistance+1,f,c
   729  007EEC  3210               	rrcf	??_checkDistance,f,c
   730  007EEE  C010  F030         	movff	??_checkDistance,checkDistance@Tm
   731  007EF2  C011  F031         	movff	??_checkDistance+1,checkDistance@Tm+1
   732  007EF6  C012  F032         	movff	??_checkDistance+2,checkDistance@Tm+2
   733  007EFA  C013  F033         	movff	??_checkDistance+3,checkDistance@Tm+3
   734                           
   735                           ;main.c: 156: Tm = 34*Tm;
   736  007EFE  C030  F001         	movff	checkDistance@Tm,___lmul@multiplier
   737  007F02  C031  F002         	movff	checkDistance@Tm+1,___lmul@multiplier+1
   738  007F06  C032  F003         	movff	checkDistance@Tm+2,___lmul@multiplier+2
   739  007F0A  C033  F004         	movff	checkDistance@Tm+3,___lmul@multiplier+3
   740  007F0E  0E22               	movlw	34
   741  007F10  6E05               	movwf	___lmul@multiplicand,c
   742  007F12  0E00               	movlw	0
   743  007F14  6E06               	movwf	___lmul@multiplicand+1,c
   744  007F16  0E00               	movlw	0
   745  007F18  6E07               	movwf	___lmul@multiplicand+2,c
   746  007F1A  0E00               	movlw	0
   747  007F1C  6E08               	movwf	___lmul@multiplicand+3,c
   748  007F1E  EC3F  F03E         	call	___lmul	;wreg free
   749  007F22  C001  F030         	movff	?___lmul,checkDistance@Tm
   750  007F26  C002  F031         	movff	?___lmul+1,checkDistance@Tm+1
   751  007F2A  C003  F032         	movff	?___lmul+2,checkDistance@Tm+2
   752  007F2E  C004  F033         	movff	?___lmul+3,checkDistance@Tm+3
   753                           
   754                           ;main.c: 157: Tm = Tm/1000;
   755  007F32  C030  F001         	movff	checkDistance@Tm,___lldiv@dividend
   756  007F36  C031  F002         	movff	checkDistance@Tm+1,___lldiv@dividend+1
   757  007F3A  C032  F003         	movff	checkDistance@Tm+2,___lldiv@dividend+2
   758  007F3E  C033  F004         	movff	checkDistance@Tm+3,___lldiv@dividend+3
   759  007F42  0EE8               	movlw	232
   760  007F44  6E05               	movwf	___lldiv@divisor,c
   761  007F46  0E03               	movlw	3
   762  007F48  6E06               	movwf	___lldiv@divisor+1,c
   763  007F4A  0E00               	movlw	0
   764  007F4C  6E07               	movwf	___lldiv@divisor+2,c
   765  007F4E  0E00               	movlw	0
   766  007F50  6E08               	movwf	___lldiv@divisor+3,c
   767  007F52  EC6A  F03E         	call	___lldiv	;wreg free
   768  007F56  C001  F030         	movff	?___lldiv,checkDistance@Tm
   769  007F5A  C002  F031         	movff	?___lldiv+1,checkDistance@Tm+1
   770  007F5E  C003  F032         	movff	?___lldiv+2,checkDistance@Tm+2
   771  007F62  C004  F033         	movff	?___lldiv+3,checkDistance@Tm+3
   772                           
   773                           ;main.c: 158: distance[ctr] = (unsigned)Tm;
   774  007F66  90D8               	bcf	status,0,c
   775  007F68  342C               	rlcf	checkDistance@ctr,w,c
   776  007F6A  6ED9               	movwf	fsr2l,c
   777  007F6C  342D               	rlcf	checkDistance@ctr+1,w,c
   778  007F6E  6EDA               	movwf	fsr2h,c
   779  007F70  0E14               	movlw	low checkDistance@distance
   780  007F72  26D9               	addwf	fsr2l,f,c
   781  007F74  0E00               	movlw	high checkDistance@distance
   782  007F76  22DA               	addwfc	fsr2h,f,c
   783  007F78  C030  FFDE         	movff	checkDistance@Tm,postinc2
   784  007F7C  C031  FFDD         	movff	checkDistance@Tm+1,postdec2
   785                           
   786                           ;main.c: 160: delay_timer();
   787  007F80  EC07  F03E         	call	_delay_timer	;wreg free
   788                           
   789                           ;main.c: 161: delay_timer();
   790  007F84  EC07  F03E         	call	_delay_timer	;wreg free
   791                           
   792                           ;main.c: 162: delay_timer();
   793  007F88  EC07  F03E         	call	_delay_timer	;wreg free
   794                           
   795                           ;main.c: 163: delay_timer();
   796  007F8C  EC07  F03E         	call	_delay_timer	;wreg free
   797                           
   798                           ;main.c: 164: delay_timer();
   799  007F90  EC07  F03E         	call	_delay_timer	;wreg free
   800  007F94  4A2C               	infsnz	checkDistance@ctr,f,c
   801  007F96  2A2D               	incf	checkDistance@ctr+1,f,c
   802  007F98  BE2D               	btfsc	checkDistance@ctr+1,7,c
   803  007F9A  D772               	goto	l962
   804  007F9C  502D               	movf	checkDistance@ctr+1,w,c
   805  007F9E  E101               	bnz	l1002
   806  007FA0  D769               	goto	L3
   807  007FA2                     l1002:
   808                           
   809                           ;main.c: 165: }
   810                           ;main.c: 167: for (int ctr2 = 0; ctr2 < 10; ctr2++) {
   811  007FA2  0E00               	movlw	0
   812  007FA4  6E2F               	movwf	checkDistance@ctr2+1,c
   813  007FA6  0E00               	movlw	0
   814  007FA8  6E2E               	movwf	checkDistance@ctr2,c
   815  007FAA                     l1004:
   816  007FAA  BE2F               	btfsc	checkDistance@ctr2+1,7,c
   817  007FAC  D006               	goto	l1008
   818  007FAE  502F               	movf	checkDistance@ctr2+1,w,c
   819  007FB0  E114               	bnz	l1014
   820  007FB2  0E0A               	movlw	10
   821  007FB4  5C2E               	subwf	checkDistance@ctr2,w,c
   822  007FB6  B0D8               	btfsc	status,0,c
   823  007FB8  D010               	goto	l1014
   824  007FBA                     l1008:
   825                           
   826                           ;main.c: 168: avgDistance += distance[ctr2];
   827  007FBA  90D8               	bcf	status,0,c
   828  007FBC  342E               	rlcf	checkDistance@ctr2,w,c
   829  007FBE  6ED9               	movwf	fsr2l,c
   830  007FC0  342F               	rlcf	checkDistance@ctr2+1,w,c
   831  007FC2  6EDA               	movwf	fsr2h,c
   832  007FC4  0E14               	movlw	low checkDistance@distance
   833  007FC6  26D9               	addwf	fsr2l,f,c
   834  007FC8  0E00               	movlw	high checkDistance@distance
   835  007FCA  22DA               	addwfc	fsr2h,f,c
   836  007FCC  50DE               	movf	postinc2,w,c
   837  007FCE  262A               	addwf	checkDistance@avgDistance,f,c
   838  007FD0  50DD               	movf	postdec2,w,c
   839  007FD2  222B               	addwfc	checkDistance@avgDistance+1,f,c
   840  007FD4  4A2E               	infsnz	checkDistance@ctr2,f,c
   841  007FD6  2A2F               	incf	checkDistance@ctr2+1,f,c
   842  007FD8  D7E8               	goto	l1004
   843  007FDA                     l1014:
   844                           
   845                           ;main.c: 169: }
   846                           ;main.c: 171: avgDistance = avgDistance/10;
   847  007FDA  C02A  F001         	movff	checkDistance@avgDistance,___lwdiv@dividend
   848  007FDE  C02B  F002         	movff	checkDistance@avgDistance+1,___lwdiv@dividend+1
   849  007FE2  0E00               	movlw	0
   850  007FE4  6E04               	movwf	___lwdiv@divisor+1,c
   851  007FE6  0E0A               	movlw	10
   852  007FE8  6E03               	movwf	___lwdiv@divisor,c
   853  007FEA  EC16  F03E         	call	___lwdiv	;wreg free
   854  007FEE  C001  F02A         	movff	?___lwdiv,checkDistance@avgDistance
   855  007FF2  C002  F02B         	movff	?___lwdiv+1,checkDistance@avgDistance+1
   856                           
   857                           ;main.c: 172: return avgDistance;
   858  007FF6  C02A  F00E         	movff	checkDistance@avgDistance,?_checkDistance
   859  007FFA  C02B  F00F         	movff	checkDistance@avgDistance+1,?_checkDistance+1
   860  007FFE  0012               	return	
   861  008000                     __end_of_checkDistance:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           intcon2	equ	0xFF1
   865                           postinc2	equ	0xFDE
   866                           postdec2	equ	0xFDD
   867                           fsr2h	equ	0xFDA
   868                           fsr2l	equ	0xFD9
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _delay_timer *****************
   872 ;; Defined at:
   873 ;;		line 119 in file "main.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  i               2    0[COMRAM] int 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   887 ;;      Params:         0       0       0       0       0       0       0
   888 ;;      Locals:         2       0       0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0
   890 ;;      Totals:         2       0       0       0       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_checkDistance
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text5
   901  007C0E                     __ptext5:
   902                           	opt stack 0
   903  007C0E                     _delay_timer:
   904                           	opt stack 29
   905                           
   906                           ;main.c: 120: for (int i = 0; i <2000; i++);
   907                           
   908                           ;incstack = 0
   909  007C0E  0E00               	movlw	0
   910  007C10  6E02               	movwf	delay_timer@i+1,c
   911  007C12  0E00               	movlw	0
   912  007C14  6E01               	movwf	delay_timer@i,c
   913  007C16                     l702:
   914  007C16  BE02               	btfsc	delay_timer@i+1,7,c
   915  007C18  D006               	goto	l706
   916  007C1A  0ED0               	movlw	208
   917  007C1C  5C01               	subwf	delay_timer@i,w,c
   918  007C1E  0E07               	movlw	7
   919  007C20  5802               	subwfb	delay_timer@i+1,w,c
   920  007C22  B0D8               	btfsc	status,0,c
   921  007C24  0012               	return	
   922  007C26                     l706:
   923  007C26  4A01               	infsnz	delay_timer@i,f,c
   924  007C28  2A02               	incf	delay_timer@i+1,f,c
   925  007C2A  D7F5               	goto	l702
   926  007C2C                     __end_of_delay_timer:
   927                           	opt stack 0
   928                           tblptru	equ	0xFF8
   929                           intcon2	equ	0xFF1
   930                           postinc2	equ	0xFDE
   931                           postdec2	equ	0xFDD
   932                           fsr2h	equ	0xFDA
   933                           fsr2l	equ	0xFD9
   934                           status	equ	0xFD8
   935                           
   936 ;; *************** function ___lwdiv *****************
   937 ;; Defined at:
   938 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lwdiv.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  dividend        2    0[COMRAM] unsigned int 
   941 ;;  divisor         2    2[COMRAM] unsigned int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  quotient        2    4[COMRAM] unsigned int 
   944 ;;  counter         1    6[COMRAM] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    0[COMRAM] unsigned int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   954 ;;      Params:         4       0       0       0       0       0       0
   955 ;;      Locals:         3       0       0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0
   957 ;;      Totals:         7       0       0       0       0       0       0
   958 ;;Total ram usage:        7 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_checkDistance
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text6
   968  007C2C                     __ptext6:
   969                           	opt stack 0
   970  007C2C                     ___lwdiv:
   971                           	opt stack 29
   972                           
   973                           ;incstack = 0
   974  007C2C  0E00               	movlw	0
   975  007C2E  6E06               	movwf	___lwdiv@quotient+1,c
   976  007C30  0E00               	movlw	0
   977  007C32  6E05               	movwf	___lwdiv@quotient,c
   978  007C34  5003               	movf	___lwdiv@divisor,w,c
   979  007C36  1004               	iorwf	___lwdiv@divisor+1,w,c
   980  007C38  B4D8               	btfsc	status,2,c
   981  007C3A  D01C               	goto	l489
   982  007C3C  0E01               	movlw	1
   983  007C3E  6E07               	movwf	___lwdiv@counter,c
   984  007C40  D004               	goto	l942
   985  007C42                     l940:
   986  007C42  90D8               	bcf	status,0,c
   987  007C44  3603               	rlcf	___lwdiv@divisor,f,c
   988  007C46  3604               	rlcf	___lwdiv@divisor+1,f,c
   989  007C48  2A07               	incf	___lwdiv@counter,f,c
   990  007C4A                     l942:
   991  007C4A  AE04               	btfss	___lwdiv@divisor+1,7,c
   992  007C4C  D7FA               	goto	l940
   993  007C4E                     l944:
   994  007C4E  90D8               	bcf	status,0,c
   995  007C50  3605               	rlcf	___lwdiv@quotient,f,c
   996  007C52  3606               	rlcf	___lwdiv@quotient+1,f,c
   997  007C54  5003               	movf	___lwdiv@divisor,w,c
   998  007C56  5C01               	subwf	___lwdiv@dividend,w,c
   999  007C58  5004               	movf	___lwdiv@divisor+1,w,c
  1000  007C5A  5802               	subwfb	___lwdiv@dividend+1,w,c
  1001  007C5C  A0D8               	btfss	status,0,c
  1002  007C5E  D005               	goto	l952
  1003  007C60  5003               	movf	___lwdiv@divisor,w,c
  1004  007C62  5E01               	subwf	___lwdiv@dividend,f,c
  1005  007C64  5004               	movf	___lwdiv@divisor+1,w,c
  1006  007C66  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1007  007C68  8005               	bsf	___lwdiv@quotient,0,c
  1008  007C6A                     l952:
  1009  007C6A  90D8               	bcf	status,0,c
  1010  007C6C  3204               	rrcf	___lwdiv@divisor+1,f,c
  1011  007C6E  3203               	rrcf	___lwdiv@divisor,f,c
  1012  007C70  2E07               	decfsz	___lwdiv@counter,f,c
  1013  007C72  D7ED               	goto	l944
  1014  007C74                     l489:
  1015  007C74  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1016  007C78  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1017  007C7C  0012               	return		;funcret
  1018  007C7E                     __end_of___lwdiv:
  1019                           	opt stack 0
  1020                           tblptru	equ	0xFF8
  1021                           intcon2	equ	0xFF1
  1022                           postinc2	equ	0xFDE
  1023                           postdec2	equ	0xFDD
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           status	equ	0xFD8
  1027                           
  1028 ;; *************** function ___lmul *****************
  1029 ;; Defined at:
  1030 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul32.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  multiplier      4    0[COMRAM] unsigned long 
  1033 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  product         4    8[COMRAM] unsigned long 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  4    0[COMRAM] unsigned long 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         8       0       0       0       0       0       0
  1046 ;;      Locals:         4       0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0
  1048 ;;      Totals:        12       0       0       0       0       0       0
  1049 ;;Total ram usage:       12 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_checkDistance
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text7
  1059  007C7E                     __ptext7:
  1060                           	opt stack 0
  1061  007C7E                     ___lmul:
  1062                           	opt stack 29
  1063                           
  1064                           ;incstack = 0
  1065  007C7E  0E00               	movlw	0
  1066  007C80  6E09               	movwf	___lmul@product,c
  1067  007C82  0E00               	movlw	0
  1068  007C84  6E0A               	movwf	___lmul@product+1,c
  1069  007C86  0E00               	movlw	0
  1070  007C88  6E0B               	movwf	___lmul@product+2,c
  1071  007C8A  0E00               	movlw	0
  1072  007C8C  6E0C               	movwf	___lmul@product+3,c
  1073  007C8E                     l904:
  1074  007C8E  A001               	btfss	___lmul@multiplier,0,c
  1075  007C90  D008               	goto	l908
  1076  007C92  5005               	movf	___lmul@multiplicand,w,c
  1077  007C94  2609               	addwf	___lmul@product,f,c
  1078  007C96  5006               	movf	___lmul@multiplicand+1,w,c
  1079  007C98  220A               	addwfc	___lmul@product+1,f,c
  1080  007C9A  5007               	movf	___lmul@multiplicand+2,w,c
  1081  007C9C  220B               	addwfc	___lmul@product+2,f,c
  1082  007C9E  5008               	movf	___lmul@multiplicand+3,w,c
  1083  007CA0  220C               	addwfc	___lmul@product+3,f,c
  1084  007CA2                     l908:
  1085  007CA2  90D8               	bcf	status,0,c
  1086  007CA4  3605               	rlcf	___lmul@multiplicand,f,c
  1087  007CA6  3606               	rlcf	___lmul@multiplicand+1,f,c
  1088  007CA8  3607               	rlcf	___lmul@multiplicand+2,f,c
  1089  007CAA  3608               	rlcf	___lmul@multiplicand+3,f,c
  1090  007CAC  90D8               	bcf	status,0,c
  1091  007CAE  3204               	rrcf	___lmul@multiplier+3,f,c
  1092  007CB0  3203               	rrcf	___lmul@multiplier+2,f,c
  1093  007CB2  3202               	rrcf	___lmul@multiplier+1,f,c
  1094  007CB4  3201               	rrcf	___lmul@multiplier,f,c
  1095  007CB6  5001               	movf	___lmul@multiplier,w,c
  1096  007CB8  1002               	iorwf	___lmul@multiplier+1,w,c
  1097  007CBA  1003               	iorwf	___lmul@multiplier+2,w,c
  1098  007CBC  1004               	iorwf	___lmul@multiplier+3,w,c
  1099  007CBE  A4D8               	btfss	status,2,c
  1100  007CC0  D7E6               	goto	l904
  1101  007CC2  C009  F001         	movff	___lmul@product,?___lmul
  1102  007CC6  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1103  007CCA  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1104  007CCE  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1105  007CD2  0012               	return		;funcret
  1106  007CD4                     __end_of___lmul:
  1107                           	opt stack 0
  1108                           tblptru	equ	0xFF8
  1109                           intcon2	equ	0xFF1
  1110                           postinc2	equ	0xFDE
  1111                           postdec2	equ	0xFDD
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function ___lldiv *****************
  1117 ;; Defined at:
  1118 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lldiv.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  dividend        4    0[COMRAM] unsigned long 
  1121 ;;  divisor         4    4[COMRAM] unsigned long 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  quotient        4    8[COMRAM] unsigned long 
  1124 ;;  counter         1   12[COMRAM] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  4    0[COMRAM] unsigned long 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1134 ;;      Params:         8       0       0       0       0       0       0
  1135 ;;      Locals:         5       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0
  1137 ;;      Totals:        13       0       0       0       0       0       0
  1138 ;;Total ram usage:       13 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_checkDistance
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text8
  1148  007CD4                     __ptext8:
  1149                           	opt stack 0
  1150  007CD4                     ___lldiv:
  1151                           	opt stack 29
  1152                           
  1153                           ;incstack = 0
  1154  007CD4  0E00               	movlw	0
  1155  007CD6  6E09               	movwf	___lldiv@quotient,c
  1156  007CD8  0E00               	movlw	0
  1157  007CDA  6E0A               	movwf	___lldiv@quotient+1,c
  1158  007CDC  0E00               	movlw	0
  1159  007CDE  6E0B               	movwf	___lldiv@quotient+2,c
  1160  007CE0  0E00               	movlw	0
  1161  007CE2  6E0C               	movwf	___lldiv@quotient+3,c
  1162  007CE4  5005               	movf	___lldiv@divisor,w,c
  1163  007CE6  1006               	iorwf	___lldiv@divisor+1,w,c
  1164  007CE8  1007               	iorwf	___lldiv@divisor+2,w,c
  1165  007CEA  1008               	iorwf	___lldiv@divisor+3,w,c
  1166  007CEC  B4D8               	btfsc	status,2,c
  1167  007CEE  D02A               	goto	l436
  1168  007CF0  0E01               	movlw	1
  1169  007CF2  6E0D               	movwf	___lldiv@counter,c
  1170  007CF4  D006               	goto	l920
  1171  007CF6                     l918:
  1172  007CF6  90D8               	bcf	status,0,c
  1173  007CF8  3605               	rlcf	___lldiv@divisor,f,c
  1174  007CFA  3606               	rlcf	___lldiv@divisor+1,f,c
  1175  007CFC  3607               	rlcf	___lldiv@divisor+2,f,c
  1176  007CFE  3608               	rlcf	___lldiv@divisor+3,f,c
  1177  007D00  2A0D               	incf	___lldiv@counter,f,c
  1178  007D02                     l920:
  1179  007D02  AE08               	btfss	___lldiv@divisor+3,7,c
  1180  007D04  D7F8               	goto	l918
  1181  007D06                     l922:
  1182  007D06  90D8               	bcf	status,0,c
  1183  007D08  3609               	rlcf	___lldiv@quotient,f,c
  1184  007D0A  360A               	rlcf	___lldiv@quotient+1,f,c
  1185  007D0C  360B               	rlcf	___lldiv@quotient+2,f,c
  1186  007D0E  360C               	rlcf	___lldiv@quotient+3,f,c
  1187  007D10  5005               	movf	___lldiv@divisor,w,c
  1188  007D12  5C01               	subwf	___lldiv@dividend,w,c
  1189  007D14  5006               	movf	___lldiv@divisor+1,w,c
  1190  007D16  5802               	subwfb	___lldiv@dividend+1,w,c
  1191  007D18  5007               	movf	___lldiv@divisor+2,w,c
  1192  007D1A  5803               	subwfb	___lldiv@dividend+2,w,c
  1193  007D1C  5008               	movf	___lldiv@divisor+3,w,c
  1194  007D1E  5804               	subwfb	___lldiv@dividend+3,w,c
  1195  007D20  A0D8               	btfss	status,0,c
  1196  007D22  D009               	goto	l930
  1197  007D24  5005               	movf	___lldiv@divisor,w,c
  1198  007D26  5E01               	subwf	___lldiv@dividend,f,c
  1199  007D28  5006               	movf	___lldiv@divisor+1,w,c
  1200  007D2A  5A02               	subwfb	___lldiv@dividend+1,f,c
  1201  007D2C  5007               	movf	___lldiv@divisor+2,w,c
  1202  007D2E  5A03               	subwfb	___lldiv@dividend+2,f,c
  1203  007D30  5008               	movf	___lldiv@divisor+3,w,c
  1204  007D32  5A04               	subwfb	___lldiv@dividend+3,f,c
  1205  007D34  8009               	bsf	___lldiv@quotient,0,c
  1206  007D36                     l930:
  1207  007D36  90D8               	bcf	status,0,c
  1208  007D38  3208               	rrcf	___lldiv@divisor+3,f,c
  1209  007D3A  3207               	rrcf	___lldiv@divisor+2,f,c
  1210  007D3C  3206               	rrcf	___lldiv@divisor+1,f,c
  1211  007D3E  3205               	rrcf	___lldiv@divisor,f,c
  1212  007D40  2E0D               	decfsz	___lldiv@counter,f,c
  1213  007D42  D7E1               	goto	l922
  1214  007D44                     l436:
  1215  007D44  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1216  007D48  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1217  007D4C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1218  007D50  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1219  007D54  0012               	return		;funcret
  1220  007D56                     __end_of___lldiv:
  1221                           	opt stack 0
  1222  0000                     tblptru	equ	0xFF8
  1223                           intcon2	equ	0xFF1
  1224                           postinc2	equ	0xFDE
  1225                           postdec2	equ	0xFDD
  1226                           fsr2h	equ	0xFDA
  1227                           fsr2l	equ	0xFD9
  1228                           status	equ	0xFD8
  1229                           tblptru	equ	0xFF8
  1230                           intcon2	equ	0xFF1
  1231                           postinc2	equ	0xFDE
  1232                           postdec2	equ	0xFDD
  1233                           fsr2h	equ	0xFDA
  1234                           fsr2l	equ	0xFD9
  1235                           status	equ	0xFD8
  1236                           
  1237                           	psect	rparam
  1238  0000                     tblptru	equ	0xFF8
  1239                           intcon2	equ	0xFF1
  1240                           postinc2	equ	0xFDE
  1241                           postdec2	equ	0xFDD
  1242                           fsr2h	equ	0xFDA
  1243                           fsr2l	equ	0xFD9
  1244                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_checkDistance
    _checkDistance->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1466
                                             51 COMRAM     6     6      0
                      _checkDistance
                      _setGreenLight
                        _setRedLight
                     _setYellowLight
 ---------------------------------------------------------------------------------
 (1) _setYellowLight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setRedLight                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGreenLight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDistance                                       38    36      2    1300
                                             13 COMRAM    38    36      2
                            ___lldiv
                             ___lmul
                            ___lwdiv
                        _delay_timer
 ---------------------------------------------------------------------------------
 (2) _delay_timer                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     322
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkDistance
     ___lldiv
     ___lmul
     ___lwdiv
     _delay_timer
   _setGreenLight
   _setRedLight
   _setYellowLight

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     39      39       1       44.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb  6 23:14:56 2016

                      l72 7EA0                        l69 7E9A                       l436 7D44  
                     l702 7C16                       l706 7C26                       l920 7D02  
                     l904 7C8E                       l489 7C74                       l930 7D36  
                     l922 7D06                       l908 7CA2                       l940 7C42  
                     l918 7CF6                       l942 7C4A                       l952 7C6A  
                     l944 7C4E                       l962 7E80                       u310 7E7E  
                     u390 7DE8              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    l1002 7FA2                      l1004 7FAA                      l1014 7FDA  
                    l1008 7FBA                      l1042 7DC6                      l1034 7DAC  
                    l1060 7E00                      l1036 7DB4                      l1070 7E28  
                    l1054 7DEE                      l1046 7DCE                      l1072 7E30  
                    l1064 7E10                      l1048 7DDC                      l1066 7E18  
                    l1078 7E36                      _LATA 000F89                      _LATB 000F8A  
                    _main 7D56                      fsr2h 000FDA                      fsr2l 000FD9  
                    start 0000              ___param_bank 000010     __end_of_setGreenLight 7BF4  
            main@distance 0038                     ?_main 0001                     _CMCON 000FB4  
         __end_of___lldiv 7D56                     _T0CON 000FD5           __end_of___lwdiv 7C7E  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _TRISA 000F92  
                   _TRISB 000F93       ___lmul@multiplicand 0005                     status 000FD8  
       checkDistance@ctr2 002E           __initialization 7C04              __end_of_main 7E5C  
    __size_of_delay_timer 001E   __size_of_setYellowLight 0008                    ??_main 0034  
            ?_setRedLight 0001             __activetblptr 000002                    _ADCON1 000FC1  
                  _OSCCON 000FD3                    ___lmul 7C7E                 ??___lldiv 0009  
               ??___lwdiv 0005                    tblptru 000FF8                __accesstop 0080  
 __end_of__initialization 7C04           __CFG_PBADEN$OFF 000000             ___rparam_used 000001  
          __pcstackCOMRAM 0001                   ?___lmul 0001            _setYellowLight 7BFC  
          ___lmul@product 0009                   _INTCON2 000FF1    __size_of_checkDistance 01A4  
    __size_of_setRedLight 0008                   __Hparam 0000                   __Lparam 0000  
  __end_of_setYellowLight 7C04           __size_of___lmul 0056                   ___lldiv 7CD4  
                 ___lwdiv 7C2C                   __pcinit 7C04                   __ramtop 0600  
                 __ptext0 7D56                   __ptext1 7BFC                   __ptext2 7BF4  
                 __ptext3 7BEC                   __ptext4 7E5C                   __ptext5 7C0E  
                 __ptext6 7C2C                   __ptext7 7C7E                   __ptext8 7CD4  
               _T0CONbits 000FD5      end_of_initialization 7C04    __size_of_setGreenLight 0008  
           __Lmediumconst 0000             ??_delay_timer 0001           ___lldiv@divisor 0005  
           _checkDistance 7E5C           ___lldiv@counter 000D           ?_setYellowLight 0001  
                 postdec2 000FDD                   postinc2 000FDE                 _PORTBbits 000F81  
               _TRISBbits 000F93            ?_checkDistance 000E             _setGreenLight 7BEC  
          __end_of___lmul 7CD4       __end_of_delay_timer 7C2C          checkDistance@ctr 002C  
     start_initialization 7C04          __CFG_OSC$INTIO67 000000                  ??___lmul 0009  
          ?_setGreenLight 0001           ??_checkDistance 0010  checkDistance@avgDistance 002A  
             _delay_timer 7C0E          ___lwdiv@dividend 0001                  ?___lldiv 0001  
                ?___lwdiv 0001             ??_setRedLight 0001          ___lwdiv@quotient 0005  
       main@state_CURRENT 0036                  _LATBbits 000F8A          ??_setYellowLight 0001  
         ??_setGreenLight 0001       __end_of_setRedLight 7BFC         ___lmul@multiplier 0001  
         checkDistance@Th 0029           checkDistance@Tl 0028           checkDistance@Tm 0030  
            delay_timer@i 0001                  __Hrparam 0000                  __Lrparam 0000  
        __size_of___lldiv 0082          __size_of___lwdiv 0052           ___lwdiv@divisor 0003  
         ___lwdiv@counter 0007             __size_of_main 0106               _setRedLight 7BF4  
        ___lldiv@dividend 0001              ?_delay_timer 0001          ___lldiv@quotient 0009  
   checkDistance@distance 0014     __end_of_checkDistance 8000  
