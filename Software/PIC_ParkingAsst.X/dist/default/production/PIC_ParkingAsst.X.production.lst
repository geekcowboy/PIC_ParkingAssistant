

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb  7 19:39:03 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _ADCON1	set	4033
    19  0000                     _CMCON	set	4020
    20  0000                     _INTCON2	set	4081
    21  0000                     _LATA	set	3977
    22  0000                     _LATB	set	3978
    23  0000                     _LATBbits	set	3978
    24  0000                     _OSCCON	set	4051
    25  0000                     _PORTBbits	set	3969
    26  0000                     _T0CON	set	4053
    27  0000                     _T0CONbits	set	4053
    28  0000                     _TMR0H	set	4055
    29  0000                     _TMR0L	set	4054
    30  0000                     _TRISA	set	3986
    31  0000                     _TRISB	set	3987
    32  0000                     _TRISBbits	set	3987
    33                           
    34                           ; #config settings
    35  0000                     
    36                           	psect	cinit
    37  007C10                     __pcinit:
    38                           	opt stack 0
    39  007C10                     start_initialization:
    40                           	opt stack 0
    41  007C10                     __initialization:
    42                           	opt stack 0
    43  007C10                     end_of_initialization:
    44                           	opt stack 0
    45  007C10                     __end_of__initialization:
    46                           	opt stack 0
    47  007C10  0E00               	movlw	low (__Lmediumconst shr (0+16))
    48  007C12  6EF8               	movwf	tblptru,c
    49  007C14  0100               	movlb	0
    50  007C16  EFB1  F03E         	goto	_main	;jump to C main() function
    51                           tblptru	equ	0xFF8
    52                           
    53                           	psect	cstackCOMRAM
    54  000001                     __pcstackCOMRAM:
    55                           	opt stack 0
    56  000001                     ?___lwdiv:
    57                           	opt stack 0
    58  000001                     ?___lmul:
    59                           	opt stack 0
    60  000001                     ?___lldiv:
    61                           	opt stack 0
    62  000001                     delay_timer@i:
    63                           	opt stack 0
    64  000001                     ___lwdiv@dividend:
    65                           	opt stack 0
    66  000001                     ___lmul@multiplier:
    67                           	opt stack 0
    68  000001                     ___lldiv@dividend:
    69                           	opt stack 0
    70                           
    71                           ; 4 bytes @ 0x0
    72  000001                     	ds	2
    73  000003                     ___lwdiv@divisor:
    74                           	opt stack 0
    75                           
    76                           ; 2 bytes @ 0x2
    77  000003                     	ds	2
    78  000005                     ___lwdiv@quotient:
    79                           	opt stack 0
    80  000005                     ___lmul@multiplicand:
    81                           	opt stack 0
    82  000005                     ___lldiv@divisor:
    83                           	opt stack 0
    84                           
    85                           ; 4 bytes @ 0x4
    86  000005                     	ds	2
    87  000007                     ___lwdiv@counter:
    88                           	opt stack 0
    89                           
    90                           ; 1 bytes @ 0x6
    91  000007                     	ds	2
    92  000009                     ___lmul@product:
    93                           	opt stack 0
    94  000009                     ___lldiv@quotient:
    95                           	opt stack 0
    96                           
    97                           ; 4 bytes @ 0x8
    98  000009                     	ds	4
    99  00000D                     ___lldiv@counter:
   100                           	opt stack 0
   101                           
   102                           ; 1 bytes @ 0xC
   103  00000D                     	ds	1
   104  00000E                     ?_checkDistance:
   105                           	opt stack 0
   106                           
   107                           ; 2 bytes @ 0xD
   108  00000E                     	ds	2
   109  000010                     ??_checkDistance:
   110                           
   111                           ; 1 bytes @ 0xF
   112  000010                     	ds	4
   113  000014                     checkDistance@distance:
   114                           	opt stack 0
   115                           
   116                           ; 20 bytes @ 0x13
   117  000014                     	ds	20
   118  000028                     checkDistance@Tl:
   119                           	opt stack 0
   120                           
   121                           ; 1 bytes @ 0x27
   122  000028                     	ds	1
   123  000029                     checkDistance@Th:
   124                           	opt stack 0
   125                           
   126                           ; 1 bytes @ 0x28
   127  000029                     	ds	1
   128  00002A                     checkDistance@avgDistance:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x29
   132  00002A                     	ds	2
   133  00002C                     checkDistance@ctr:
   134                           	opt stack 0
   135                           
   136                           ; 2 bytes @ 0x2B
   137  00002C                     	ds	2
   138  00002E                     checkDistance@ctr2:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x2D
   142  00002E                     	ds	2
   143  000030                     checkDistance@Tm:
   144                           	opt stack 0
   145                           
   146                           ; 4 bytes @ 0x2F
   147  000030                     	ds	4
   148  000034                     ??_main:
   149                           
   150                           ; 1 bytes @ 0x33
   151  000034                     	ds	2
   152  000036                     main@state_CURRENT:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x35
   156  000036                     	ds	2
   157  000038                     main@distance:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0x37
   161  000038                     	ds	2
   162                           tblptru	equ	0xFF8
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 48 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  distance        2   55[COMRAM] unsigned int 
   174 ;;  state_CURREN    2   53[COMRAM] unsigned int 
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   184 ;;      Params:         0       0       0       0       0       0       0
   185 ;;      Locals:         4       0       0       0       0       0       0
   186 ;;      Temps:          2       0       0       0       0       0       0
   187 ;;      Totals:         6       0       0       0       0       0       0
   188 ;;Total ram usage:        6 bytes
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		_checkDistance
   192 ;;		_setGreenLight
   193 ;;		_setRedLight
   194 ;;		_setYellowLight
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  007D62                     __ptext0:
   202                           	opt stack 0
   203  007D62                     _main:
   204                           	opt stack 29
   205                           
   206                           ;main.c: 50: unsigned int state_CURRENT = 0;
   207                           
   208                           ;incstack = 0
   209  007D62  0E00               	movlw	0
   210  007D64  6E37               	movwf	main@state_CURRENT+1,c
   211  007D66  0E00               	movlw	0
   212  007D68  6E36               	movwf	main@state_CURRENT,c
   213                           
   214                           ;main.c: 51: unsigned int distance = 0;
   215  007D6A  0E00               	movlw	0
   216  007D6C  6E39               	movwf	main@distance+1,c
   217  007D6E  0E00               	movlw	0
   218  007D70  6E38               	movwf	main@distance,c
   219                           
   220                           ;main.c: 53: ADCON1 = 0x0F;
   221  007D72  0E0F               	movlw	15
   222  007D74  6EC1               	movwf	4033,c	;volatile
   223                           
   224                           ;main.c: 54: T0CON = 0x00;
   225  007D76  0E00               	movlw	0
   226  007D78  6ED5               	movwf	4053,c	;volatile
   227                           
   228                           ;main.c: 55: OSCCON = 0x72;
   229  007D7A  0E72               	movlw	114
   230  007D7C  6ED3               	movwf	4051,c	;volatile
   231                           
   232                           ;main.c: 56: CMCON = 0x07;
   233  007D7E  0E07               	movlw	7
   234  007D80  6EB4               	movwf	4020,c	;volatile
   235                           
   236                           ;main.c: 57: INTCON2 = 0x80;
   237  007D82  0E80               	movlw	128
   238  007D84  6EF1               	movwf	intcon2,c	;volatile
   239                           
   240                           ;main.c: 59: TRISB = 0;
   241  007D86  0E00               	movlw	0
   242  007D88  6E93               	movwf	3987,c	;volatile
   243                           
   244                           ;main.c: 60: TRISA = 0;
   245  007D8A  0E00               	movlw	0
   246  007D8C  6E92               	movwf	3986,c	;volatile
   247                           
   248                           ;main.c: 61: LATB = 0;
   249  007D8E  0E00               	movlw	0
   250  007D90  6E8A               	movwf	3978,c	;volatile
   251                           
   252                           ;main.c: 62: LATA = 0;
   253  007D92  0E00               	movlw	0
   254  007D94  6E89               	movwf	3977,c	;volatile
   255                           
   256                           ;main.c: 64: TRISBbits.TRISB1 = 0;
   257  007D96  9293               	bcf	3987,1,c	;volatile
   258                           
   259                           ;main.c: 65: TRISBbits.TRISB2 = 0;
   260  007D98  9493               	bcf	3987,2,c	;volatile
   261                           
   262                           ;main.c: 66: TRISBbits.TRISB3 = 0;
   263  007D9A  9693               	bcf	3987,3,c	;volatile
   264                           
   265                           ;main.c: 68: distance = checkDistance();
   266  007D9C  EC34  F03F         	call	_checkDistance	;wreg free
   267  007DA0  C00E  F038         	movff	?_checkDistance,main@distance
   268  007DA4  C00F  F039         	movff	?_checkDistance+1,main@distance+1
   269                           
   270                           ;main.c: 70: if (distance < 140) {
   271  007DA8  5039               	movf	main@distance+1,w,c
   272  007DAA  E10A               	bnz	l1024
   273  007DAC  0E8C               	movlw	140
   274  007DAE  5C38               	subwf	main@distance,w,c
   275  007DB0  B0D8               	btfsc	status,0,c
   276  007DB2  D006               	goto	l1024
   277                           
   278                           ;main.c: 71: setRedLight();
   279  007DB4  EC00  F03E         	call	_setRedLight	;wreg free
   280  007DB8                     l1022:
   281                           
   282                           ;main.c: 72: state_CURRENT = 0;
   283  007DB8  0E00               	movlw	0
   284  007DBA  6E37               	movwf	main@state_CURRENT+1,c
   285  007DBC  0E00               	movlw	0
   286  007DBE  D00C               	goto	L2
   287  007DC0                     l1024:
   288                           
   289                           ;main.c: 74: else if (distance > 305) {
   290  007DC0  0E32               	movlw	50
   291  007DC2  5C38               	subwf	main@distance,w,c
   292  007DC4  0E01               	movlw	1
   293  007DC6  5839               	subwfb	main@distance+1,w,c
   294  007DC8  A0D8               	btfss	status,0,c
   295  007DCA  D003               	goto	l1030
   296                           
   297                           ;main.c: 75: setGreenLight();
   298  007DCC  ECFC  F03D         	call	_setGreenLight	;wreg free
   299  007DD0  D025               	goto	l1052
   300  007DD2                     l1030:
   301                           
   302                           ;main.c: 78: else {
   303                           ;main.c: 79: setYellowLight();
   304  007DD2  EC04  F03E         	call	_setYellowLight	;wreg free
   305  007DD6  D02E               	goto	l1058
   306  007DD8                     L2:
   307  007DD8  6E36               	movwf	main@state_CURRENT,c
   308  007DDA                     l1034:
   309                           
   310                           ;main.c: 84: distance = checkDistance();
   311  007DDA  EC34  F03F         	call	_checkDistance	;wreg free
   312  007DDE  C00E  F038         	movff	?_checkDistance,main@distance
   313  007DE2  C00F  F039         	movff	?_checkDistance+1,main@distance+1
   314                           
   315                           ;main.c: 86: switch(state_CURRENT) {
   316  007DE6  D02D               	goto	l1066
   317  007DE8                     l1036:
   318                           
   319                           ;main.c: 88: if (distance > 140) {
   320  007DE8  5039               	movf	main@distance+1,w,c
   321  007DEA  E104               	bnz	u390
   322  007DEC  0E8D               	movlw	141
   323  007DEE  5C38               	subwf	main@distance,w,c
   324  007DF0  A0D8               	btfss	status,0,c
   325  007DF2  D7F3               	goto	l1034
   326  007DF4                     u390:
   327                           
   328                           ;main.c: 89: setYellowLight();
   329  007DF4  EC04  F03E         	call	_setYellowLight	;wreg free
   330  007DF8  D01D               	goto	l1058
   331  007DFA                     l1042:
   332                           
   333                           ;main.c: 94: if (distance <= 80) {
   334  007DFA  5039               	movf	main@distance+1,w,c
   335  007DFC  E107               	bnz	l1048
   336  007DFE  0E51               	movlw	81
   337  007E00  5C38               	subwf	main@distance,w,c
   338  007E02  B0D8               	btfsc	status,0,c
   339  007E04  D003               	goto	l1048
   340                           
   341                           ;main.c: 95: setRedLight();
   342  007E06  EC00  F03E         	call	_setRedLight	;wreg free
   343  007E0A  D7D6               	goto	l1022
   344  007E0C                     l1048:
   345                           
   346                           ;main.c: 98: else if (distance > 305) {
   347  007E0C  0E32               	movlw	50
   348  007E0E  5C38               	subwf	main@distance,w,c
   349  007E10  0E01               	movlw	1
   350  007E12  5839               	subwfb	main@distance+1,w,c
   351  007E14  A0D8               	btfss	status,0,c
   352  007E16  D7E1               	goto	l1034
   353                           
   354                           ;main.c: 99: setGreenLight();
   355  007E18  ECFC  F03D         	call	_setGreenLight	;wreg free
   356  007E1C                     l1052:
   357                           
   358                           ;main.c: 100: state_CURRENT = 2;
   359  007E1C  0E00               	movlw	0
   360  007E1E  6E37               	movwf	main@state_CURRENT+1,c
   361  007E20  0E02               	movlw	2
   362  007E22  D7DA               	goto	L2
   363  007E24                     l1054:
   364                           
   365                           ;main.c: 104: if (distance <= 275) {
   366  007E24  0E14               	movlw	20
   367  007E26  5C38               	subwf	main@distance,w,c
   368  007E28  0E01               	movlw	1
   369  007E2A  5839               	subwfb	main@distance+1,w,c
   370  007E2C  B0D8               	btfsc	status,0,c
   371  007E2E  D7D5               	goto	l1034
   372                           
   373                           ;main.c: 105: setYellowLight();
   374  007E30  EC04  F03E         	call	_setYellowLight	;wreg free
   375  007E34                     l1058:
   376                           
   377                           ;main.c: 106: state_CURRENT = 1;
   378  007E34  0E00               	movlw	0
   379  007E36  6E37               	movwf	main@state_CURRENT+1,c
   380  007E38  0E01               	movlw	1
   381  007E3A  D7CE               	goto	L2
   382  007E3C                     l1060:
   383                           
   384                           ;main.c: 110: setRedLight();
   385  007E3C  EC00  F03E         	call	_setRedLight	;wreg free
   386  007E40  D7BB               	goto	l1022
   387  007E42                     l1066:
   388  007E42  C036  F034         	movff	main@state_CURRENT,??_main
   389  007E46  C037  F035         	movff	main@state_CURRENT+1,??_main+1
   390                           
   391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   392                           ; Switch size 1, requested type "space"
   393                           ; Number of cases is 1, Range of values is 0 to 0
   394                           ; switch strategies available:
   395                           ; Name         Instructions Cycles
   396                           ; simple_byte            4     3 (average)
   397                           ;	Chosen strategy is simple_byte
   398  007E4A  5035               	movf	??_main+1,w,c
   399  007E4C  0A00               	xorlw	0	; case 0
   400  007E4E  A4D8               	btfss	status,2,c
   401  007E50  D7F5               	goto	l1060
   402                           
   403                           ; Switch size 1, requested type "space"
   404                           ; Number of cases is 3, Range of values is 0 to 2
   405                           ; switch strategies available:
   406                           ; Name         Instructions Cycles
   407                           ; simple_byte           10     6 (average)
   408                           ;	Chosen strategy is simple_byte
   409  007E52  5034               	movf	??_main,w,c
   410  007E54  0A00               	xorlw	0	; case 0
   411  007E56  B4D8               	btfsc	status,2,c
   412  007E58  D7C7               	goto	l1036
   413  007E5A  0A01               	xorlw	1	; case 1
   414  007E5C  B4D8               	btfsc	status,2,c
   415  007E5E  D7CD               	goto	l1042
   416  007E60  0A03               	xorlw	3	; case 2
   417  007E62  B4D8               	btfsc	status,2,c
   418  007E64  D7DF               	goto	l1054
   419  007E66  D7EA               	goto	l1060
   420  007E68                     __end_of_main:
   421                           	opt stack 0
   422                           tblptru	equ	0xFF8
   423                           intcon2	equ	0xFF1
   424                           status	equ	0xFD8
   425                           
   426 ;; *************** function _setYellowLight *****************
   427 ;; Defined at:
   428 ;;		line 184 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		None
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text1
   456  007C08                     __ptext1:
   457                           	opt stack 0
   458  007C08                     _setYellowLight:
   459                           	opt stack 30
   460                           
   461                           ;main.c: 185: LATBbits.LATB1 = 0;
   462                           
   463                           ;incstack = 0
   464  007C08  928A               	bcf	3978,1,c	;volatile
   465                           
   466                           ;main.c: 186: LATBbits.LATB2 = 1;
   467  007C0A  848A               	bsf	3978,2,c	;volatile
   468                           
   469                           ;main.c: 187: LATBbits.LATB3 = 0;
   470  007C0C  968A               	bcf	3978,3,c	;volatile
   471  007C0E  0012               	return		;funcret
   472  007C10                     __end_of_setYellowLight:
   473                           	opt stack 0
   474                           tblptru	equ	0xFF8
   475                           intcon2	equ	0xFF1
   476                           status	equ	0xFD8
   477                           
   478 ;; *************** function _setRedLight *****************
   479 ;; Defined at:
   480 ;;		line 190 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		None
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   494 ;;      Params:         0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508  007C00                     __ptext2:
   509                           	opt stack 0
   510  007C00                     _setRedLight:
   511                           	opt stack 30
   512                           
   513                           ;main.c: 191: LATBbits.LATB1 = 0;
   514                           
   515                           ;incstack = 0
   516  007C00  928A               	bcf	3978,1,c	;volatile
   517                           
   518                           ;main.c: 192: LATBbits.LATB2 = 0;
   519  007C02  948A               	bcf	3978,2,c	;volatile
   520                           
   521                           ;main.c: 193: LATBbits.LATB3 = 1;
   522  007C04  868A               	bsf	3978,3,c	;volatile
   523  007C06  0012               	return		;funcret
   524  007C08                     __end_of_setRedLight:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           intcon2	equ	0xFF1
   528                           status	equ	0xFD8
   529                           
   530 ;; *************** function _setGreenLight *****************
   531 ;; Defined at:
   532 ;;		line 177 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		None
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   546 ;;      Params:         0       0       0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text3
   560  007BF8                     __ptext3:
   561                           	opt stack 0
   562  007BF8                     _setGreenLight:
   563                           	opt stack 30
   564                           
   565                           ;main.c: 178: LATBbits.LATB1 = 1;
   566                           
   567                           ;incstack = 0
   568  007BF8  828A               	bsf	3978,1,c	;volatile
   569                           
   570                           ;main.c: 179: LATBbits.LATB2 = 0;
   571  007BFA  948A               	bcf	3978,2,c	;volatile
   572                           
   573                           ;main.c: 180: LATBbits.LATB3 = 0;
   574  007BFC  968A               	bcf	3978,3,c	;volatile
   575  007BFE  0012               	return		;funcret
   576  007C00                     __end_of_setGreenLight:
   577                           	opt stack 0
   578                           tblptru	equ	0xFF8
   579                           intcon2	equ	0xFF1
   580                           status	equ	0xFD8
   581                           
   582 ;; *************** function _checkDistance *****************
   583 ;; Defined at:
   584 ;;		line 125 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  ctr2            2   45[COMRAM] int 
   589 ;;  ctr             2   43[COMRAM] int 
   590 ;;  distance       20   19[COMRAM] unsigned int [10]
   591 ;;  Tm              4   47[COMRAM] unsigned long 
   592 ;;  avgDistance     2   41[COMRAM] unsigned int 
   593 ;;  Th              1   40[COMRAM] unsigned char 
   594 ;;  Tl              1   39[COMRAM] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2   13[COMRAM] int 
   597 ;; Registers used:
   598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   604 ;;      Params:         2       0       0       0       0       0       0
   605 ;;      Locals:        32       0       0       0       0       0       0
   606 ;;      Temps:          4       0       0       0       0       0       0
   607 ;;      Totals:        38       0       0       0       0       0       0
   608 ;;Total ram usage:       38 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    1
   611 ;; This function calls:
   612 ;;		___lldiv
   613 ;;		___lmul
   614 ;;		___lwdiv
   615 ;;		_delay_timer
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text4
   622  007E68                     __ptext4:
   623                           	opt stack 0
   624  007E68                     _checkDistance:
   625                           	opt stack 29
   626                           
   627                           ;main.c: 126: unsigned long Tm;
   628                           ;main.c: 127: unsigned char Tl, Th;
   629                           ;main.c: 128: unsigned int distance[10];
   630                           ;main.c: 129: unsigned int avgDistance = 0;
   631                           
   632                           ;incstack = 0
   633  007E68  0E00               	movlw	0
   634  007E6A  6E2B               	movwf	checkDistance@avgDistance+1,c
   635  007E6C  0E00               	movlw	0
   636  007E6E  6E2A               	movwf	checkDistance@avgDistance,c
   637                           
   638                           ;main.c: 131: for (int ctr = 0; ctr < 10; ctr++) {
   639  007E70  0E00               	movlw	0
   640  007E72  6E2D               	movwf	checkDistance@ctr+1,c
   641  007E74  0E00               	movlw	0
   642  007E76  6E2C               	movwf	checkDistance@ctr,c
   643  007E78  BE2D               	btfsc	checkDistance@ctr+1,7,c
   644  007E7A  D008               	goto	l956
   645  007E7C  502D               	movf	checkDistance@ctr+1,w,c
   646  007E7E  E105               	bnz	u310
   647  007E80  0E0A               	movlw	10
   648  007E82  5C2C               	subwf	checkDistance@ctr,w,c
   649  007E84  B0D8               	btfsc	status,0,c
   650  007E86  D08D               	goto	l990
   651  007E88  D001               	goto	l956
   652  007E8A                     u310:
   653  007E8A  D08B               	goto	l990
   654  007E8C                     l956:
   655                           
   656                           ;main.c: 133: TMR0H = 0;
   657  007E8C  0E00               	movlw	0
   658  007E8E  6ED7               	movwf	4055,c	;volatile
   659                           
   660                           ;main.c: 134: TMR0L = 0;
   661  007E90  0E00               	movlw	0
   662  007E92  6ED6               	movwf	4054,c	;volatile
   663                           
   664                           ;main.c: 136: TRISBbits.TRISB0 = 0;
   665  007E94  9093               	bcf	3987,0,c	;volatile
   666                           
   667                           ;main.c: 138: LATBbits.LATB0 = 0;
   668  007E96  908A               	bcf	3978,0,c	;volatile
   669                           
   670                           ;main.c: 139: delay_timer();
   671  007E98  EC0D  F03E         	call	_delay_timer	;wreg free
   672                           
   673                           ;main.c: 141: LATBbits.LATB0 = 1;
   674  007E9C  808A               	bsf	3978,0,c	;volatile
   675                           
   676                           ;main.c: 142: delay_timer();
   677  007E9E  EC0D  F03E         	call	_delay_timer	;wreg free
   678                           
   679                           ;main.c: 144: LATBbits.LATB0 = 0;
   680  007EA2  908A               	bcf	3978,0,c	;volatile
   681                           
   682                           ;main.c: 146: TRISBbits.TRISB0 = 1;
   683  007EA4  8093               	bsf	3987,0,c	;volatile
   684  007EA6                     l69:
   685  007EA6  A081               	btfss	3969,0,c	;volatile
   686  007EA8  D7FE               	goto	l69
   687                           
   688                           ;main.c: 148: T0CONbits.TMR0ON = 1;
   689  007EAA  8ED5               	bsf	4053,7,c	;volatile
   690  007EAC                     l72:
   691  007EAC  B081               	btfsc	3969,0,c	;volatile
   692  007EAE  D7FE               	goto	l72
   693                           
   694                           ;main.c: 150: T0CONbits.TMR0ON = 0;
   695  007EB0  9ED5               	bcf	4053,7,c	;volatile
   696                           
   697                           ;main.c: 152: Tl = TMR0L;
   698  007EB2  CFD6 F028          	movff	4054,checkDistance@Tl	;volatile
   699                           
   700                           ;main.c: 153: Th = TMR0H;
   701  007EB6  CFD7 F029          	movff	4055,checkDistance@Th	;volatile
   702                           
   703                           ;main.c: 154: Tm = Th * 256 + Tl;
   704  007EBA  5028               	movf	checkDistance@Tl,w,c
   705  007EBC  C029  F010         	movff	checkDistance@Th,??_checkDistance
   706  007EC0  6A11               	clrf	(??_checkDistance+1)& (0+255),c
   707  007EC2  C010  F011         	movff	??_checkDistance,??_checkDistance+1
   708  007EC6  6A10               	clrf	??_checkDistance,c
   709  007EC8  2610               	addwf	??_checkDistance,f,c
   710  007ECA  0E00               	movlw	0
   711  007ECC  2211               	addwfc	??_checkDistance+1,f,c
   712  007ECE  C010  F030         	movff	??_checkDistance,checkDistance@Tm
   713  007ED2  C011  F031         	movff	??_checkDistance+1,checkDistance@Tm+1
   714  007ED6  0E00               	movlw	0
   715  007ED8  BE31               	btfsc	checkDistance@Tm+1,7,c
   716  007EDA  0EFF               	movlw	-1
   717  007EDC  6E32               	movwf	checkDistance@Tm+2,c
   718  007EDE  6E33               	movwf	checkDistance@Tm+3,c
   719                           
   720                           ;main.c: 155: Tm = Tm/2;
   721  007EE0  C030  F010         	movff	checkDistance@Tm,??_checkDistance
   722  007EE4  C031  F011         	movff	checkDistance@Tm+1,??_checkDistance+1
   723  007EE8  C032  F012         	movff	checkDistance@Tm+2,??_checkDistance+2
   724  007EEC  C033  F013         	movff	checkDistance@Tm+3,??_checkDistance+3
   725  007EF0  90D8               	bcf	status,0,c
   726  007EF2  3213               	rrcf	??_checkDistance+3,f,c
   727  007EF4  3212               	rrcf	??_checkDistance+2,f,c
   728  007EF6  3211               	rrcf	??_checkDistance+1,f,c
   729  007EF8  3210               	rrcf	??_checkDistance,f,c
   730  007EFA  C010  F030         	movff	??_checkDistance,checkDistance@Tm
   731  007EFE  C011  F031         	movff	??_checkDistance+1,checkDistance@Tm+1
   732  007F02  C012  F032         	movff	??_checkDistance+2,checkDistance@Tm+2
   733  007F06  C013  F033         	movff	??_checkDistance+3,checkDistance@Tm+3
   734                           
   735                           ;main.c: 156: Tm = 34*Tm;
   736  007F0A  C030  F001         	movff	checkDistance@Tm,___lmul@multiplier
   737  007F0E  C031  F002         	movff	checkDistance@Tm+1,___lmul@multiplier+1
   738  007F12  C032  F003         	movff	checkDistance@Tm+2,___lmul@multiplier+2
   739  007F16  C033  F004         	movff	checkDistance@Tm+3,___lmul@multiplier+3
   740  007F1A  0E22               	movlw	34
   741  007F1C  6E05               	movwf	___lmul@multiplicand,c
   742  007F1E  0E00               	movlw	0
   743  007F20  6E06               	movwf	___lmul@multiplicand+1,c
   744  007F22  0E00               	movlw	0
   745  007F24  6E07               	movwf	___lmul@multiplicand+2,c
   746  007F26  0E00               	movlw	0
   747  007F28  6E08               	movwf	___lmul@multiplicand+3,c
   748  007F2A  EC45  F03E         	call	___lmul	;wreg free
   749  007F2E  C001  F030         	movff	?___lmul,checkDistance@Tm
   750  007F32  C002  F031         	movff	?___lmul+1,checkDistance@Tm+1
   751  007F36  C003  F032         	movff	?___lmul+2,checkDistance@Tm+2
   752  007F3A  C004  F033         	movff	?___lmul+3,checkDistance@Tm+3
   753                           
   754                           ;main.c: 157: Tm = Tm/1000;
   755  007F3E  C030  F001         	movff	checkDistance@Tm,___lldiv@dividend
   756  007F42  C031  F002         	movff	checkDistance@Tm+1,___lldiv@dividend+1
   757  007F46  C032  F003         	movff	checkDistance@Tm+2,___lldiv@dividend+2
   758  007F4A  C033  F004         	movff	checkDistance@Tm+3,___lldiv@dividend+3
   759  007F4E  0EE8               	movlw	232
   760  007F50  6E05               	movwf	___lldiv@divisor,c
   761  007F52  0E03               	movlw	3
   762  007F54  6E06               	movwf	___lldiv@divisor+1,c
   763  007F56  0E00               	movlw	0
   764  007F58  6E07               	movwf	___lldiv@divisor+2,c
   765  007F5A  0E00               	movlw	0
   766  007F5C  6E08               	movwf	___lldiv@divisor+3,c
   767  007F5E  EC70  F03E         	call	___lldiv	;wreg free
   768  007F62  C001  F030         	movff	?___lldiv,checkDistance@Tm
   769  007F66  C002  F031         	movff	?___lldiv+1,checkDistance@Tm+1
   770  007F6A  C003  F032         	movff	?___lldiv+2,checkDistance@Tm+2
   771  007F6E  C004  F033         	movff	?___lldiv+3,checkDistance@Tm+3
   772                           
   773                           ;main.c: 158: distance[ctr] = (unsigned)Tm;
   774  007F72  90D8               	bcf	status,0,c
   775  007F74  342C               	rlcf	checkDistance@ctr,w,c
   776  007F76  6ED9               	movwf	fsr2l,c
   777  007F78  342D               	rlcf	checkDistance@ctr+1,w,c
   778  007F7A  6EDA               	movwf	fsr2h,c
   779  007F7C  0E14               	movlw	low checkDistance@distance
   780  007F7E  26D9               	addwf	fsr2l,f,c
   781  007F80  0E00               	movlw	high checkDistance@distance
   782  007F82  22DA               	addwfc	fsr2h,f,c
   783  007F84  C030  FFDE         	movff	checkDistance@Tm,postinc2
   784  007F88  C031  FFDD         	movff	checkDistance@Tm+1,postdec2
   785                           
   786                           ;main.c: 160: delay_timer();
   787  007F8C  EC0D  F03E         	call	_delay_timer	;wreg free
   788                           
   789                           ;main.c: 161: delay_timer();
   790  007F90  EC0D  F03E         	call	_delay_timer	;wreg free
   791  007F94  4A2C               	infsnz	checkDistance@ctr,f,c
   792  007F96  2A2D               	incf	checkDistance@ctr+1,f,c
   793  007F98  BE2D               	btfsc	checkDistance@ctr+1,7,c
   794  007F9A  D778               	goto	l956
   795  007F9C  502D               	movf	checkDistance@ctr+1,w,c
   796  007F9E  E101               	bnz	l990
   797  007FA0  D76F               	goto	L3
   798  007FA2                     l990:
   799                           
   800                           ;main.c: 165: }
   801                           ;main.c: 167: for (int ctr2 = 0; ctr2 < 10; ctr2++) {
   802  007FA2  0E00               	movlw	0
   803  007FA4  6E2F               	movwf	checkDistance@ctr2+1,c
   804  007FA6  0E00               	movlw	0
   805  007FA8  6E2E               	movwf	checkDistance@ctr2,c
   806  007FAA                     l992:
   807  007FAA  BE2F               	btfsc	checkDistance@ctr2+1,7,c
   808  007FAC  D006               	goto	l996
   809  007FAE  502F               	movf	checkDistance@ctr2+1,w,c
   810  007FB0  E114               	bnz	l1002
   811  007FB2  0E0A               	movlw	10
   812  007FB4  5C2E               	subwf	checkDistance@ctr2,w,c
   813  007FB6  B0D8               	btfsc	status,0,c
   814  007FB8  D010               	goto	l1002
   815  007FBA                     l996:
   816                           
   817                           ;main.c: 168: avgDistance += distance[ctr2];
   818  007FBA  90D8               	bcf	status,0,c
   819  007FBC  342E               	rlcf	checkDistance@ctr2,w,c
   820  007FBE  6ED9               	movwf	fsr2l,c
   821  007FC0  342F               	rlcf	checkDistance@ctr2+1,w,c
   822  007FC2  6EDA               	movwf	fsr2h,c
   823  007FC4  0E14               	movlw	low checkDistance@distance
   824  007FC6  26D9               	addwf	fsr2l,f,c
   825  007FC8  0E00               	movlw	high checkDistance@distance
   826  007FCA  22DA               	addwfc	fsr2h,f,c
   827  007FCC  50DE               	movf	postinc2,w,c
   828  007FCE  262A               	addwf	checkDistance@avgDistance,f,c
   829  007FD0  50DD               	movf	postdec2,w,c
   830  007FD2  222B               	addwfc	checkDistance@avgDistance+1,f,c
   831  007FD4  4A2E               	infsnz	checkDistance@ctr2,f,c
   832  007FD6  2A2F               	incf	checkDistance@ctr2+1,f,c
   833  007FD8  D7E8               	goto	l992
   834  007FDA                     l1002:
   835                           
   836                           ;main.c: 169: }
   837                           ;main.c: 171: avgDistance = avgDistance/10;
   838  007FDA  C02A  F001         	movff	checkDistance@avgDistance,___lwdiv@dividend
   839  007FDE  C02B  F002         	movff	checkDistance@avgDistance+1,___lwdiv@dividend+1
   840  007FE2  0E00               	movlw	0
   841  007FE4  6E04               	movwf	___lwdiv@divisor+1,c
   842  007FE6  0E0A               	movlw	10
   843  007FE8  6E03               	movwf	___lwdiv@divisor,c
   844  007FEA  EC1C  F03E         	call	___lwdiv	;wreg free
   845  007FEE  C001  F02A         	movff	?___lwdiv,checkDistance@avgDistance
   846  007FF2  C002  F02B         	movff	?___lwdiv+1,checkDistance@avgDistance+1
   847                           
   848                           ;main.c: 172: return avgDistance;
   849  007FF6  C02A  F00E         	movff	checkDistance@avgDistance,?_checkDistance
   850  007FFA  C02B  F00F         	movff	checkDistance@avgDistance+1,?_checkDistance+1
   851  007FFE  0012               	return	
   852  008000                     __end_of_checkDistance:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           intcon2	equ	0xFF1
   856                           postinc2	equ	0xFDE
   857                           postdec2	equ	0xFDD
   858                           fsr2h	equ	0xFDA
   859                           fsr2l	equ	0xFD9
   860                           status	equ	0xFD8
   861                           
   862 ;; *************** function _delay_timer *****************
   863 ;; Defined at:
   864 ;;		line 119 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  i               2    0[COMRAM] int 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   878 ;;      Params:         0       0       0       0       0       0       0
   879 ;;      Locals:         2       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0
   881 ;;      Totals:         2       0       0       0       0       0       0
   882 ;;Total ram usage:        2 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_checkDistance
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text5
   892  007C1A                     __ptext5:
   893                           	opt stack 0
   894  007C1A                     _delay_timer:
   895                           	opt stack 29
   896                           
   897                           ;main.c: 120: for (int i = 0; i <2000; i++);
   898                           
   899                           ;incstack = 0
   900  007C1A  0E00               	movlw	0
   901  007C1C  6E02               	movwf	delay_timer@i+1,c
   902  007C1E  0E00               	movlw	0
   903  007C20  6E01               	movwf	delay_timer@i,c
   904  007C22                     l702:
   905  007C22  BE02               	btfsc	delay_timer@i+1,7,c
   906  007C24  D006               	goto	l706
   907  007C26  0ED0               	movlw	208
   908  007C28  5C01               	subwf	delay_timer@i,w,c
   909  007C2A  0E07               	movlw	7
   910  007C2C  5802               	subwfb	delay_timer@i+1,w,c
   911  007C2E  B0D8               	btfsc	status,0,c
   912  007C30  0012               	return	
   913  007C32                     l706:
   914  007C32  4A01               	infsnz	delay_timer@i,f,c
   915  007C34  2A02               	incf	delay_timer@i+1,f,c
   916  007C36  D7F5               	goto	l702
   917  007C38                     __end_of_delay_timer:
   918                           	opt stack 0
   919                           tblptru	equ	0xFF8
   920                           intcon2	equ	0xFF1
   921                           postinc2	equ	0xFDE
   922                           postdec2	equ	0xFDD
   923                           fsr2h	equ	0xFDA
   924                           fsr2l	equ	0xFD9
   925                           status	equ	0xFD8
   926                           
   927 ;; *************** function ___lwdiv *****************
   928 ;; Defined at:
   929 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lwdiv.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  dividend        2    0[COMRAM] unsigned int 
   932 ;;  divisor         2    2[COMRAM] unsigned int 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  quotient        2    4[COMRAM] unsigned int 
   935 ;;  counter         1    6[COMRAM] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2    0[COMRAM] unsigned int 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   945 ;;      Params:         4       0       0       0       0       0       0
   946 ;;      Locals:         3       0       0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0
   948 ;;      Totals:         7       0       0       0       0       0       0
   949 ;;Total ram usage:        7 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_checkDistance
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text6
   959  007C38                     __ptext6:
   960                           	opt stack 0
   961  007C38                     ___lwdiv:
   962                           	opt stack 29
   963                           
   964                           ;incstack = 0
   965  007C38  0E00               	movlw	0
   966  007C3A  6E06               	movwf	___lwdiv@quotient+1,c
   967  007C3C  0E00               	movlw	0
   968  007C3E  6E05               	movwf	___lwdiv@quotient,c
   969  007C40  5003               	movf	___lwdiv@divisor,w,c
   970  007C42  1004               	iorwf	___lwdiv@divisor+1,w,c
   971  007C44  B4D8               	btfsc	status,2,c
   972  007C46  D01C               	goto	l489
   973  007C48  0E01               	movlw	1
   974  007C4A  6E07               	movwf	___lwdiv@counter,c
   975  007C4C  D004               	goto	l936
   976  007C4E                     l934:
   977  007C4E  90D8               	bcf	status,0,c
   978  007C50  3603               	rlcf	___lwdiv@divisor,f,c
   979  007C52  3604               	rlcf	___lwdiv@divisor+1,f,c
   980  007C54  2A07               	incf	___lwdiv@counter,f,c
   981  007C56                     l936:
   982  007C56  AE04               	btfss	___lwdiv@divisor+1,7,c
   983  007C58  D7FA               	goto	l934
   984  007C5A                     l938:
   985  007C5A  90D8               	bcf	status,0,c
   986  007C5C  3605               	rlcf	___lwdiv@quotient,f,c
   987  007C5E  3606               	rlcf	___lwdiv@quotient+1,f,c
   988  007C60  5003               	movf	___lwdiv@divisor,w,c
   989  007C62  5C01               	subwf	___lwdiv@dividend,w,c
   990  007C64  5004               	movf	___lwdiv@divisor+1,w,c
   991  007C66  5802               	subwfb	___lwdiv@dividend+1,w,c
   992  007C68  A0D8               	btfss	status,0,c
   993  007C6A  D005               	goto	l946
   994  007C6C  5003               	movf	___lwdiv@divisor,w,c
   995  007C6E  5E01               	subwf	___lwdiv@dividend,f,c
   996  007C70  5004               	movf	___lwdiv@divisor+1,w,c
   997  007C72  5A02               	subwfb	___lwdiv@dividend+1,f,c
   998  007C74  8005               	bsf	___lwdiv@quotient,0,c
   999  007C76                     l946:
  1000  007C76  90D8               	bcf	status,0,c
  1001  007C78  3204               	rrcf	___lwdiv@divisor+1,f,c
  1002  007C7A  3203               	rrcf	___lwdiv@divisor,f,c
  1003  007C7C  2E07               	decfsz	___lwdiv@counter,f,c
  1004  007C7E  D7ED               	goto	l938
  1005  007C80                     l489:
  1006  007C80  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1007  007C84  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1008  007C88  0012               	return		;funcret
  1009  007C8A                     __end_of___lwdiv:
  1010                           	opt stack 0
  1011                           tblptru	equ	0xFF8
  1012                           intcon2	equ	0xFF1
  1013                           postinc2	equ	0xFDE
  1014                           postdec2	equ	0xFDD
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function ___lmul *****************
  1020 ;; Defined at:
  1021 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul32.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  multiplier      4    0[COMRAM] unsigned long 
  1024 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  product         4    8[COMRAM] unsigned long 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  4    0[COMRAM] unsigned long 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1036 ;;      Params:         8       0       0       0       0       0       0
  1037 ;;      Locals:         4       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0
  1039 ;;      Totals:        12       0       0       0       0       0       0
  1040 ;;Total ram usage:       12 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_checkDistance
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text7
  1050  007C8A                     __ptext7:
  1051                           	opt stack 0
  1052  007C8A                     ___lmul:
  1053                           	opt stack 29
  1054                           
  1055                           ;incstack = 0
  1056  007C8A  0E00               	movlw	0
  1057  007C8C  6E09               	movwf	___lmul@product,c
  1058  007C8E  0E00               	movlw	0
  1059  007C90  6E0A               	movwf	___lmul@product+1,c
  1060  007C92  0E00               	movlw	0
  1061  007C94  6E0B               	movwf	___lmul@product+2,c
  1062  007C96  0E00               	movlw	0
  1063  007C98  6E0C               	movwf	___lmul@product+3,c
  1064  007C9A                     l898:
  1065  007C9A  A001               	btfss	___lmul@multiplier,0,c
  1066  007C9C  D008               	goto	l902
  1067  007C9E  5005               	movf	___lmul@multiplicand,w,c
  1068  007CA0  2609               	addwf	___lmul@product,f,c
  1069  007CA2  5006               	movf	___lmul@multiplicand+1,w,c
  1070  007CA4  220A               	addwfc	___lmul@product+1,f,c
  1071  007CA6  5007               	movf	___lmul@multiplicand+2,w,c
  1072  007CA8  220B               	addwfc	___lmul@product+2,f,c
  1073  007CAA  5008               	movf	___lmul@multiplicand+3,w,c
  1074  007CAC  220C               	addwfc	___lmul@product+3,f,c
  1075  007CAE                     l902:
  1076  007CAE  90D8               	bcf	status,0,c
  1077  007CB0  3605               	rlcf	___lmul@multiplicand,f,c
  1078  007CB2  3606               	rlcf	___lmul@multiplicand+1,f,c
  1079  007CB4  3607               	rlcf	___lmul@multiplicand+2,f,c
  1080  007CB6  3608               	rlcf	___lmul@multiplicand+3,f,c
  1081  007CB8  90D8               	bcf	status,0,c
  1082  007CBA  3204               	rrcf	___lmul@multiplier+3,f,c
  1083  007CBC  3203               	rrcf	___lmul@multiplier+2,f,c
  1084  007CBE  3202               	rrcf	___lmul@multiplier+1,f,c
  1085  007CC0  3201               	rrcf	___lmul@multiplier,f,c
  1086  007CC2  5001               	movf	___lmul@multiplier,w,c
  1087  007CC4  1002               	iorwf	___lmul@multiplier+1,w,c
  1088  007CC6  1003               	iorwf	___lmul@multiplier+2,w,c
  1089  007CC8  1004               	iorwf	___lmul@multiplier+3,w,c
  1090  007CCA  A4D8               	btfss	status,2,c
  1091  007CCC  D7E6               	goto	l898
  1092  007CCE  C009  F001         	movff	___lmul@product,?___lmul
  1093  007CD2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1094  007CD6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1095  007CDA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1096  007CDE  0012               	return		;funcret
  1097  007CE0                     __end_of___lmul:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           intcon2	equ	0xFF1
  1101                           postinc2	equ	0xFDE
  1102                           postdec2	equ	0xFDD
  1103                           fsr2h	equ	0xFDA
  1104                           fsr2l	equ	0xFD9
  1105                           status	equ	0xFD8
  1106                           
  1107 ;; *************** function ___lldiv *****************
  1108 ;; Defined at:
  1109 ;;		line 8 in file "/Applications/microchip/xc8/v1.36/sources/common/lldiv.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  dividend        4    0[COMRAM] unsigned long 
  1112 ;;  divisor         4    4[COMRAM] unsigned long 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  quotient        4    8[COMRAM] unsigned long 
  1115 ;;  counter         1   12[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  4    0[COMRAM] unsigned long 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1125 ;;      Params:         8       0       0       0       0       0       0
  1126 ;;      Locals:         5       0       0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0
  1128 ;;      Totals:        13       0       0       0       0       0       0
  1129 ;;Total ram usage:       13 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_checkDistance
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text8
  1139  007CE0                     __ptext8:
  1140                           	opt stack 0
  1141  007CE0                     ___lldiv:
  1142                           	opt stack 29
  1143                           
  1144                           ;incstack = 0
  1145  007CE0  0E00               	movlw	0
  1146  007CE2  6E09               	movwf	___lldiv@quotient,c
  1147  007CE4  0E00               	movlw	0
  1148  007CE6  6E0A               	movwf	___lldiv@quotient+1,c
  1149  007CE8  0E00               	movlw	0
  1150  007CEA  6E0B               	movwf	___lldiv@quotient+2,c
  1151  007CEC  0E00               	movlw	0
  1152  007CEE  6E0C               	movwf	___lldiv@quotient+3,c
  1153  007CF0  5005               	movf	___lldiv@divisor,w,c
  1154  007CF2  1006               	iorwf	___lldiv@divisor+1,w,c
  1155  007CF4  1007               	iorwf	___lldiv@divisor+2,w,c
  1156  007CF6  1008               	iorwf	___lldiv@divisor+3,w,c
  1157  007CF8  B4D8               	btfsc	status,2,c
  1158  007CFA  D02A               	goto	l436
  1159  007CFC  0E01               	movlw	1
  1160  007CFE  6E0D               	movwf	___lldiv@counter,c
  1161  007D00  D006               	goto	l914
  1162  007D02                     l912:
  1163  007D02  90D8               	bcf	status,0,c
  1164  007D04  3605               	rlcf	___lldiv@divisor,f,c
  1165  007D06  3606               	rlcf	___lldiv@divisor+1,f,c
  1166  007D08  3607               	rlcf	___lldiv@divisor+2,f,c
  1167  007D0A  3608               	rlcf	___lldiv@divisor+3,f,c
  1168  007D0C  2A0D               	incf	___lldiv@counter,f,c
  1169  007D0E                     l914:
  1170  007D0E  AE08               	btfss	___lldiv@divisor+3,7,c
  1171  007D10  D7F8               	goto	l912
  1172  007D12                     l916:
  1173  007D12  90D8               	bcf	status,0,c
  1174  007D14  3609               	rlcf	___lldiv@quotient,f,c
  1175  007D16  360A               	rlcf	___lldiv@quotient+1,f,c
  1176  007D18  360B               	rlcf	___lldiv@quotient+2,f,c
  1177  007D1A  360C               	rlcf	___lldiv@quotient+3,f,c
  1178  007D1C  5005               	movf	___lldiv@divisor,w,c
  1179  007D1E  5C01               	subwf	___lldiv@dividend,w,c
  1180  007D20  5006               	movf	___lldiv@divisor+1,w,c
  1181  007D22  5802               	subwfb	___lldiv@dividend+1,w,c
  1182  007D24  5007               	movf	___lldiv@divisor+2,w,c
  1183  007D26  5803               	subwfb	___lldiv@dividend+2,w,c
  1184  007D28  5008               	movf	___lldiv@divisor+3,w,c
  1185  007D2A  5804               	subwfb	___lldiv@dividend+3,w,c
  1186  007D2C  A0D8               	btfss	status,0,c
  1187  007D2E  D009               	goto	l924
  1188  007D30  5005               	movf	___lldiv@divisor,w,c
  1189  007D32  5E01               	subwf	___lldiv@dividend,f,c
  1190  007D34  5006               	movf	___lldiv@divisor+1,w,c
  1191  007D36  5A02               	subwfb	___lldiv@dividend+1,f,c
  1192  007D38  5007               	movf	___lldiv@divisor+2,w,c
  1193  007D3A  5A03               	subwfb	___lldiv@dividend+2,f,c
  1194  007D3C  5008               	movf	___lldiv@divisor+3,w,c
  1195  007D3E  5A04               	subwfb	___lldiv@dividend+3,f,c
  1196  007D40  8009               	bsf	___lldiv@quotient,0,c
  1197  007D42                     l924:
  1198  007D42  90D8               	bcf	status,0,c
  1199  007D44  3208               	rrcf	___lldiv@divisor+3,f,c
  1200  007D46  3207               	rrcf	___lldiv@divisor+2,f,c
  1201  007D48  3206               	rrcf	___lldiv@divisor+1,f,c
  1202  007D4A  3205               	rrcf	___lldiv@divisor,f,c
  1203  007D4C  2E0D               	decfsz	___lldiv@counter,f,c
  1204  007D4E  D7E1               	goto	l916
  1205  007D50                     l436:
  1206  007D50  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1207  007D54  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1208  007D58  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1209  007D5C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1210  007D60  0012               	return		;funcret
  1211  007D62                     __end_of___lldiv:
  1212                           	opt stack 0
  1213  0000                     tblptru	equ	0xFF8
  1214                           intcon2	equ	0xFF1
  1215                           postinc2	equ	0xFDE
  1216                           postdec2	equ	0xFDD
  1217                           fsr2h	equ	0xFDA
  1218                           fsr2l	equ	0xFD9
  1219                           status	equ	0xFD8
  1220                           tblptru	equ	0xFF8
  1221                           intcon2	equ	0xFF1
  1222                           postinc2	equ	0xFDE
  1223                           postdec2	equ	0xFDD
  1224                           fsr2h	equ	0xFDA
  1225                           fsr2l	equ	0xFD9
  1226                           status	equ	0xFD8
  1227                           
  1228                           	psect	rparam
  1229  0000                     tblptru	equ	0xFF8
  1230                           intcon2	equ	0xFF1
  1231                           postinc2	equ	0xFDE
  1232                           postdec2	equ	0xFDD
  1233                           fsr2h	equ	0xFDA
  1234                           fsr2l	equ	0xFD9
  1235                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_checkDistance
    _checkDistance->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1466
                                             51 COMRAM     6     6      0
                      _checkDistance
                      _setGreenLight
                        _setRedLight
                     _setYellowLight
 ---------------------------------------------------------------------------------
 (1) _setYellowLight                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setRedLight                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setGreenLight                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkDistance                                       38    36      2    1300
                                             13 COMRAM    38    36      2
                            ___lldiv
                             ___lmul
                            ___lwdiv
                        _delay_timer
 ---------------------------------------------------------------------------------
 (2) _delay_timer                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     322
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkDistance
     ___lldiv
     ___lmul
     ___lwdiv
     _delay_timer
   _setGreenLight
   _setRedLight
   _setYellowLight

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     39      39       1       44.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb  7 19:39:03 2016

                      l72 7EAC                        l69 7EA6                       l436 7D50  
                     l702 7C22                       l706 7C32                       l902 7CAE  
                     l912 7D02                       l489 7C80                       l914 7D0E  
                     l924 7D42                       l916 7D12                       l934 7C4E  
                     l936 7C56                       l946 7C76                       l938 7C5A  
                     l956 7E8C                       l990 7FA2                       l992 7FAA  
                     l898 7C9A                       l996 7FBA                       u310 7E8A  
                     u390 7DF4              __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000  
                    l1002 7FDA                      l1030 7DD2                      l1022 7DB8  
                    l1024 7DC0                      l1042 7DFA                      l1034 7DDA  
                    l1060 7E3C                      l1052 7E1C                      l1036 7DE8  
                    l1054 7E24                      l1048 7E0C                      l1058 7E34  
                    l1066 7E42                      _LATA 000F89                      _LATB 000F8A  
                    _main 7D62                      fsr2h 000FDA                      fsr2l 000FD9  
                    start 0000              ___param_bank 000010     __end_of_setGreenLight 7C00  
            main@distance 0038                     ?_main 0001                     _CMCON 000FB4  
         __end_of___lldiv 7D62                     _T0CON 000FD5           __end_of___lwdiv 7C8A  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _TRISA 000F92  
                   _TRISB 000F93       ___lmul@multiplicand 0005                     status 000FD8  
       checkDistance@ctr2 002E           __initialization 7C10              __end_of_main 7E68  
    __size_of_delay_timer 001E   __size_of_setYellowLight 0008                    ??_main 0034  
            ?_setRedLight 0001             __activetblptr 000002                    _ADCON1 000FC1  
                  _OSCCON 000FD3                    ___lmul 7C8A                 ??___lldiv 0009  
               ??___lwdiv 0005                    tblptru 000FF8                __accesstop 0080  
 __end_of__initialization 7C10           __CFG_PBADEN$OFF 000000             ___rparam_used 000001  
          __pcstackCOMRAM 0001                   ?___lmul 0001            _setYellowLight 7C08  
          ___lmul@product 0009                   _INTCON2 000FF1    __size_of_checkDistance 0198  
    __size_of_setRedLight 0008                   __Hparam 0000                   __Lparam 0000  
  __end_of_setYellowLight 7C10           __size_of___lmul 0056                   ___lldiv 7CE0  
                 ___lwdiv 7C38                   __pcinit 7C10                   __ramtop 0600  
                 __ptext0 7D62                   __ptext1 7C08                   __ptext2 7C00  
                 __ptext3 7BF8                   __ptext4 7E68                   __ptext5 7C1A  
                 __ptext6 7C38                   __ptext7 7C8A                   __ptext8 7CE0  
               _T0CONbits 000FD5      end_of_initialization 7C10    __size_of_setGreenLight 0008  
           __Lmediumconst 0000             ??_delay_timer 0001           ___lldiv@divisor 0005  
           _checkDistance 7E68           ___lldiv@counter 000D           ?_setYellowLight 0001  
                 postdec2 000FDD                   postinc2 000FDE                 _PORTBbits 000F81  
               _TRISBbits 000F93            ?_checkDistance 000E             _setGreenLight 7BF8  
          __end_of___lmul 7CE0       __end_of_delay_timer 7C38          checkDistance@ctr 002C  
     start_initialization 7C10          __CFG_OSC$INTIO67 000000                  ??___lmul 0009  
          ?_setGreenLight 0001           ??_checkDistance 0010  checkDistance@avgDistance 002A  
             _delay_timer 7C1A          ___lwdiv@dividend 0001                  ?___lldiv 0001  
                ?___lwdiv 0001             ??_setRedLight 0001          ___lwdiv@quotient 0005  
       main@state_CURRENT 0036                  _LATBbits 000F8A          ??_setYellowLight 0001  
         ??_setGreenLight 0001       __end_of_setRedLight 7C08         ___lmul@multiplier 0001  
         checkDistance@Th 0029           checkDistance@Tl 0028           checkDistance@Tm 0030  
            delay_timer@i 0001                  __Hrparam 0000                  __Lrparam 0000  
        __size_of___lldiv 0082          __size_of___lwdiv 0052           ___lwdiv@divisor 0003  
         ___lwdiv@counter 0007             __size_of_main 0106               _setRedLight 7C00  
        ___lldiv@dividend 0001              ?_delay_timer 0001          ___lldiv@quotient 0009  
   checkDistance@distance 0014     __end_of_checkDistance 8000  
